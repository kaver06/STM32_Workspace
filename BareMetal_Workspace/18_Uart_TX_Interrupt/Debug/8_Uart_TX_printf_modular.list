
8_Uart_TX_printf_modular.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000123c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000050  080013dc  080013dc  000023dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800142c  0800142c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  0800142c  0800142c  0000242c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001434  08001434  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001434  08001434  00002434  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001438  08001438  00002438  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  0800143c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001498  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001498  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d37  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000471  00000000  00000000  00003dc3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  00004238  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000e4  00000000  00000000  00004388  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a7dc  00000000  00000000  0000446c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001c07  00000000  00000000  0001ec48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000903f2  00000000  00000000  0002084f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b0c41  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ba4  00000000  00000000  000b0c84  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000084  00000000  00000000  000b1828  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080013c4 	.word	0x080013c4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	080013c4 	.word	0x080013c4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:




int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0


	init_uart3_tx();
 8000284:	f000 f8b6 	bl	80003f4 <init_uart3_tx>

	while(1)
	{
		printf("Hello from STM32F4........\n\r");
 8000288:	4801      	ldr	r0, [pc, #4]	@ (8000290 <main+0x10>)
 800028a:	f000 fa2f 	bl	80006ec <iprintf>
 800028e:	e7fb      	b.n	8000288 <main+0x8>
 8000290:	080013dc 	.word	0x080013dc

08000294 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000294:	b580      	push	{r7, lr}
 8000296:	b086      	sub	sp, #24
 8000298:	af00      	add	r7, sp, #0
 800029a:	60f8      	str	r0, [r7, #12]
 800029c:	60b9      	str	r1, [r7, #8]
 800029e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002a0:	2300      	movs	r3, #0
 80002a2:	617b      	str	r3, [r7, #20]
 80002a4:	e00a      	b.n	80002bc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002a6:	f3af 8000 	nop.w
 80002aa:	4601      	mov	r1, r0
 80002ac:	68bb      	ldr	r3, [r7, #8]
 80002ae:	1c5a      	adds	r2, r3, #1
 80002b0:	60ba      	str	r2, [r7, #8]
 80002b2:	b2ca      	uxtb	r2, r1
 80002b4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002b6:	697b      	ldr	r3, [r7, #20]
 80002b8:	3301      	adds	r3, #1
 80002ba:	617b      	str	r3, [r7, #20]
 80002bc:	697a      	ldr	r2, [r7, #20]
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	429a      	cmp	r2, r3
 80002c2:	dbf0      	blt.n	80002a6 <_read+0x12>
	}

return len;
 80002c4:	687b      	ldr	r3, [r7, #4]
}
 80002c6:	4618      	mov	r0, r3
 80002c8:	3718      	adds	r7, #24
 80002ca:	46bd      	mov	sp, r7
 80002cc:	bd80      	pop	{r7, pc}

080002ce <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002ce:	b580      	push	{r7, lr}
 80002d0:	b086      	sub	sp, #24
 80002d2:	af00      	add	r7, sp, #0
 80002d4:	60f8      	str	r0, [r7, #12]
 80002d6:	60b9      	str	r1, [r7, #8]
 80002d8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002da:	2300      	movs	r3, #0
 80002dc:	617b      	str	r3, [r7, #20]
 80002de:	e009      	b.n	80002f4 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80002e0:	68bb      	ldr	r3, [r7, #8]
 80002e2:	1c5a      	adds	r2, r3, #1
 80002e4:	60ba      	str	r2, [r7, #8]
 80002e6:	781b      	ldrb	r3, [r3, #0]
 80002e8:	4618      	mov	r0, r3
 80002ea:	f000 f877 	bl	80003dc <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ee:	697b      	ldr	r3, [r7, #20]
 80002f0:	3301      	adds	r3, #1
 80002f2:	617b      	str	r3, [r7, #20]
 80002f4:	697a      	ldr	r2, [r7, #20]
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	429a      	cmp	r2, r3
 80002fa:	dbf1      	blt.n	80002e0 <_write+0x12>
	}
	return len;
 80002fc:	687b      	ldr	r3, [r7, #4]
}
 80002fe:	4618      	mov	r0, r3
 8000300:	3718      	adds	r7, #24
 8000302:	46bd      	mov	sp, r7
 8000304:	bd80      	pop	{r7, pc}

08000306 <_close>:

int _close(int file)
{
 8000306:	b480      	push	{r7}
 8000308:	b083      	sub	sp, #12
 800030a:	af00      	add	r7, sp, #0
 800030c:	6078      	str	r0, [r7, #4]
	return -1;
 800030e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000312:	4618      	mov	r0, r3
 8000314:	370c      	adds	r7, #12
 8000316:	46bd      	mov	sp, r7
 8000318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800031c:	4770      	bx	lr

0800031e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800031e:	b480      	push	{r7}
 8000320:	b083      	sub	sp, #12
 8000322:	af00      	add	r7, sp, #0
 8000324:	6078      	str	r0, [r7, #4]
 8000326:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000328:	683b      	ldr	r3, [r7, #0]
 800032a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800032e:	605a      	str	r2, [r3, #4]
	return 0;
 8000330:	2300      	movs	r3, #0
}
 8000332:	4618      	mov	r0, r3
 8000334:	370c      	adds	r7, #12
 8000336:	46bd      	mov	sp, r7
 8000338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800033c:	4770      	bx	lr

0800033e <_isatty>:

int _isatty(int file)
{
 800033e:	b480      	push	{r7}
 8000340:	b083      	sub	sp, #12
 8000342:	af00      	add	r7, sp, #0
 8000344:	6078      	str	r0, [r7, #4]
	return 1;
 8000346:	2301      	movs	r3, #1
}
 8000348:	4618      	mov	r0, r3
 800034a:	370c      	adds	r7, #12
 800034c:	46bd      	mov	sp, r7
 800034e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000352:	4770      	bx	lr

08000354 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000354:	b480      	push	{r7}
 8000356:	b085      	sub	sp, #20
 8000358:	af00      	add	r7, sp, #0
 800035a:	60f8      	str	r0, [r7, #12]
 800035c:	60b9      	str	r1, [r7, #8]
 800035e:	607a      	str	r2, [r7, #4]
	return 0;
 8000360:	2300      	movs	r3, #0
}
 8000362:	4618      	mov	r0, r3
 8000364:	3714      	adds	r7, #20
 8000366:	46bd      	mov	sp, r7
 8000368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036c:	4770      	bx	lr
	...

08000370 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000370:	b580      	push	{r7, lr}
 8000372:	b086      	sub	sp, #24
 8000374:	af00      	add	r7, sp, #0
 8000376:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000378:	4a14      	ldr	r2, [pc, #80]	@ (80003cc <_sbrk+0x5c>)
 800037a:	4b15      	ldr	r3, [pc, #84]	@ (80003d0 <_sbrk+0x60>)
 800037c:	1ad3      	subs	r3, r2, r3
 800037e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000380:	697b      	ldr	r3, [r7, #20]
 8000382:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000384:	4b13      	ldr	r3, [pc, #76]	@ (80003d4 <_sbrk+0x64>)
 8000386:	681b      	ldr	r3, [r3, #0]
 8000388:	2b00      	cmp	r3, #0
 800038a:	d102      	bne.n	8000392 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800038c:	4b11      	ldr	r3, [pc, #68]	@ (80003d4 <_sbrk+0x64>)
 800038e:	4a12      	ldr	r2, [pc, #72]	@ (80003d8 <_sbrk+0x68>)
 8000390:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000392:	4b10      	ldr	r3, [pc, #64]	@ (80003d4 <_sbrk+0x64>)
 8000394:	681a      	ldr	r2, [r3, #0]
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4413      	add	r3, r2
 800039a:	693a      	ldr	r2, [r7, #16]
 800039c:	429a      	cmp	r2, r3
 800039e:	d207      	bcs.n	80003b0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003a0:	f000 fa48 	bl	8000834 <__errno>
 80003a4:	4603      	mov	r3, r0
 80003a6:	220c      	movs	r2, #12
 80003a8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003aa:	f04f 33ff 	mov.w	r3, #4294967295
 80003ae:	e009      	b.n	80003c4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003b0:	4b08      	ldr	r3, [pc, #32]	@ (80003d4 <_sbrk+0x64>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003b6:	4b07      	ldr	r3, [pc, #28]	@ (80003d4 <_sbrk+0x64>)
 80003b8:	681a      	ldr	r2, [r3, #0]
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4413      	add	r3, r2
 80003be:	4a05      	ldr	r2, [pc, #20]	@ (80003d4 <_sbrk+0x64>)
 80003c0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003c2:	68fb      	ldr	r3, [r7, #12]
}
 80003c4:	4618      	mov	r0, r3
 80003c6:	3718      	adds	r7, #24
 80003c8:	46bd      	mov	sp, r7
 80003ca:	bd80      	pop	{r7, pc}
 80003cc:	20020000 	.word	0x20020000
 80003d0:	00000400 	.word	0x00000400
 80003d4:	20000078 	.word	0x20000078
 80003d8:	200001c8 	.word	0x200001c8

080003dc <__io_putchar>:
static uint16_t compute_uart_bd(uint32_t Pheriph_clk,uint32_t Baudrate);
static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t Pheriph_clk,uint32_t Baudrate);
void uart3_write(int ch);

int __io_putchar(int ch)
{
 80003dc:	b580      	push	{r7, lr}
 80003de:	b082      	sub	sp, #8
 80003e0:	af00      	add	r7, sp, #0
 80003e2:	6078      	str	r0, [r7, #4]
	uart3_write(ch);
 80003e4:	6878      	ldr	r0, [r7, #4]
 80003e6:	f000 f851 	bl	800048c <uart3_write>
	return ch;
 80003ea:	687b      	ldr	r3, [r7, #4]
}
 80003ec:	4618      	mov	r0, r3
 80003ee:	3708      	adds	r7, #8
 80003f0:	46bd      	mov	sp, r7
 80003f2:	bd80      	pop	{r7, pc}

080003f4 <init_uart3_tx>:

void init_uart3_tx(void)
{
 80003f4:	b580      	push	{r7, lr}
 80003f6:	af00      	add	r7, sp, #0
	/*********configure uart gpio_pin***********/
	//enable clock access to gpioD
	RCC->AHB1ENR|=GPIODEN;
 80003f8:	4b20      	ldr	r3, [pc, #128]	@ (800047c <init_uart3_tx+0x88>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003fc:	4a1f      	ldr	r2, [pc, #124]	@ (800047c <init_uart3_tx+0x88>)
 80003fe:	f043 0308 	orr.w	r3, r3, #8
 8000402:	6313      	str	r3, [r2, #48]	@ 0x30
	//set PD8 to alternate function mode
	GPIOD->MODER |= (1<<17);
 8000404:	4b1e      	ldr	r3, [pc, #120]	@ (8000480 <init_uart3_tx+0x8c>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	4a1d      	ldr	r2, [pc, #116]	@ (8000480 <init_uart3_tx+0x8c>)
 800040a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800040e:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1<<16);
 8000410:	4b1b      	ldr	r3, [pc, #108]	@ (8000480 <init_uart3_tx+0x8c>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	4a1a      	ldr	r2, [pc, #104]	@ (8000480 <init_uart3_tx+0x8c>)
 8000416:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800041a:	6013      	str	r3, [r2, #0]
	//set PD8 alternate function to type UART_TX (AF7)
	GPIOD->AFR[1]|=(1<<0);
 800041c:	4b18      	ldr	r3, [pc, #96]	@ (8000480 <init_uart3_tx+0x8c>)
 800041e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000420:	4a17      	ldr	r2, [pc, #92]	@ (8000480 <init_uart3_tx+0x8c>)
 8000422:	f043 0301 	orr.w	r3, r3, #1
 8000426:	6253      	str	r3, [r2, #36]	@ 0x24
	GPIOD->AFR[1]|=(1<<1);
 8000428:	4b15      	ldr	r3, [pc, #84]	@ (8000480 <init_uart3_tx+0x8c>)
 800042a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800042c:	4a14      	ldr	r2, [pc, #80]	@ (8000480 <init_uart3_tx+0x8c>)
 800042e:	f043 0302 	orr.w	r3, r3, #2
 8000432:	6253      	str	r3, [r2, #36]	@ 0x24
	GPIOD->AFR[1]|=(1<<2);
 8000434:	4b12      	ldr	r3, [pc, #72]	@ (8000480 <init_uart3_tx+0x8c>)
 8000436:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000438:	4a11      	ldr	r2, [pc, #68]	@ (8000480 <init_uart3_tx+0x8c>)
 800043a:	f043 0304 	orr.w	r3, r3, #4
 800043e:	6253      	str	r3, [r2, #36]	@ 0x24
	GPIOD->AFR[1]&=~(1<<3);
 8000440:	4b0f      	ldr	r3, [pc, #60]	@ (8000480 <init_uart3_tx+0x8c>)
 8000442:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000444:	4a0e      	ldr	r2, [pc, #56]	@ (8000480 <init_uart3_tx+0x8c>)
 8000446:	f023 0308 	bic.w	r3, r3, #8
 800044a:	6253      	str	r3, [r2, #36]	@ 0x24



	/*********configuring Uart module**********/
	//enable clock access to uart3
	RCC->APB1ENR |= USART3EN;
 800044c:	4b0b      	ldr	r3, [pc, #44]	@ (800047c <init_uart3_tx+0x88>)
 800044e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000450:	4a0a      	ldr	r2, [pc, #40]	@ (800047c <init_uart3_tx+0x88>)
 8000452:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000456:	6413      	str	r3, [r2, #64]	@ 0x40
	//configure baudrate
	uart_set_baudrate(USART3,APB1,Uart_Baudrate);
 8000458:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800045c:	4909      	ldr	r1, [pc, #36]	@ (8000484 <init_uart3_tx+0x90>)
 800045e:	480a      	ldr	r0, [pc, #40]	@ (8000488 <init_uart3_tx+0x94>)
 8000460:	f000 f82c 	bl	80004bc <uart_set_baudrate>
	//configure the transfer direction for both RX and TX using control register
	USART3->CR1 = (TE_EN | RE_EN);
 8000464:	4b08      	ldr	r3, [pc, #32]	@ (8000488 <init_uart3_tx+0x94>)
 8000466:	220c      	movs	r2, #12
 8000468:	60da      	str	r2, [r3, #12]

	//enable uart module
	USART3->CR1 |= UE_EN;
 800046a:	4b07      	ldr	r3, [pc, #28]	@ (8000488 <init_uart3_tx+0x94>)
 800046c:	68db      	ldr	r3, [r3, #12]
 800046e:	4a06      	ldr	r2, [pc, #24]	@ (8000488 <init_uart3_tx+0x94>)
 8000470:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000474:	60d3      	str	r3, [r2, #12]
}
 8000476:	bf00      	nop
 8000478:	bd80      	pop	{r7, pc}
 800047a:	bf00      	nop
 800047c:	40023800 	.word	0x40023800
 8000480:	40020c00 	.word	0x40020c00
 8000484:	00f42400 	.word	0x00f42400
 8000488:	40004800 	.word	0x40004800

0800048c <uart3_write>:

void uart3_write(int ch)
{
 800048c:	b480      	push	{r7}
 800048e:	b083      	sub	sp, #12
 8000490:	af00      	add	r7, sp, #0
 8000492:	6078      	str	r0, [r7, #4]
	//ensure the transmit data register is empty
	while(!(USART3->SR & TXE));
 8000494:	bf00      	nop
 8000496:	4b08      	ldr	r3, [pc, #32]	@ (80004b8 <uart3_write+0x2c>)
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800049e:	2b00      	cmp	r3, #0
 80004a0:	d0f9      	beq.n	8000496 <uart3_write+0xa>
	//write to the transmit data register
	USART3->DR = (ch&0xFF);
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	4a04      	ldr	r2, [pc, #16]	@ (80004b8 <uart3_write+0x2c>)
 80004a6:	b2db      	uxtb	r3, r3
 80004a8:	6053      	str	r3, [r2, #4]
}
 80004aa:	bf00      	nop
 80004ac:	370c      	adds	r7, #12
 80004ae:	46bd      	mov	sp, r7
 80004b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b4:	4770      	bx	lr
 80004b6:	bf00      	nop
 80004b8:	40004800 	.word	0x40004800

080004bc <uart_set_baudrate>:



static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t Pheriph_clk,uint32_t Baudrate)
{
 80004bc:	b580      	push	{r7, lr}
 80004be:	b084      	sub	sp, #16
 80004c0:	af00      	add	r7, sp, #0
 80004c2:	60f8      	str	r0, [r7, #12]
 80004c4:	60b9      	str	r1, [r7, #8]
 80004c6:	607a      	str	r2, [r7, #4]
	USART3->BRR |=compute_uart_bd(Pheriph_clk,Baudrate);
 80004c8:	6879      	ldr	r1, [r7, #4]
 80004ca:	68b8      	ldr	r0, [r7, #8]
 80004cc:	f000 f80e 	bl	80004ec <compute_uart_bd>
 80004d0:	4603      	mov	r3, r0
 80004d2:	461a      	mov	r2, r3
 80004d4:	4b04      	ldr	r3, [pc, #16]	@ (80004e8 <uart_set_baudrate+0x2c>)
 80004d6:	689b      	ldr	r3, [r3, #8]
 80004d8:	4611      	mov	r1, r2
 80004da:	4a03      	ldr	r2, [pc, #12]	@ (80004e8 <uart_set_baudrate+0x2c>)
 80004dc:	430b      	orrs	r3, r1
 80004de:	6093      	str	r3, [r2, #8]
}
 80004e0:	bf00      	nop
 80004e2:	3710      	adds	r7, #16
 80004e4:	46bd      	mov	sp, r7
 80004e6:	bd80      	pop	{r7, pc}
 80004e8:	40004800 	.word	0x40004800

080004ec <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t Pheriph_clk,uint32_t Baudrate)
{
 80004ec:	b480      	push	{r7}
 80004ee:	b083      	sub	sp, #12
 80004f0:	af00      	add	r7, sp, #0
 80004f2:	6078      	str	r0, [r7, #4]
 80004f4:	6039      	str	r1, [r7, #0]
	return (Pheriph_clk+Baudrate/2)/Baudrate;
 80004f6:	683b      	ldr	r3, [r7, #0]
 80004f8:	085a      	lsrs	r2, r3, #1
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	441a      	add	r2, r3
 80004fe:	683b      	ldr	r3, [r7, #0]
 8000500:	fbb2 f3f3 	udiv	r3, r2, r3
 8000504:	b29b      	uxth	r3, r3
}
 8000506:	4618      	mov	r0, r3
 8000508:	370c      	adds	r7, #12
 800050a:	46bd      	mov	sp, r7
 800050c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000510:	4770      	bx	lr
	...

08000514 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000514:	480d      	ldr	r0, [pc, #52]	@ (800054c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000516:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000518:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800051c:	480c      	ldr	r0, [pc, #48]	@ (8000550 <LoopForever+0x6>)
  ldr r1, =_edata
 800051e:	490d      	ldr	r1, [pc, #52]	@ (8000554 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000520:	4a0d      	ldr	r2, [pc, #52]	@ (8000558 <LoopForever+0xe>)
  movs r3, #0
 8000522:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000524:	e002      	b.n	800052c <LoopCopyDataInit>

08000526 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000526:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000528:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800052a:	3304      	adds	r3, #4

0800052c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800052c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800052e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000530:	d3f9      	bcc.n	8000526 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000532:	4a0a      	ldr	r2, [pc, #40]	@ (800055c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000534:	4c0a      	ldr	r4, [pc, #40]	@ (8000560 <LoopForever+0x16>)
  movs r3, #0
 8000536:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000538:	e001      	b.n	800053e <LoopFillZerobss>

0800053a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800053a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800053c:	3204      	adds	r2, #4

0800053e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800053e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000540:	d3fb      	bcc.n	800053a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000542:	f000 f97d 	bl	8000840 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000546:	f7ff fe9b 	bl	8000280 <main>

0800054a <LoopForever>:

LoopForever:
    b LoopForever
 800054a:	e7fe      	b.n	800054a <LoopForever>
  ldr   r0, =_estack
 800054c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000550:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000554:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000558:	0800143c 	.word	0x0800143c
  ldr r2, =_sbss
 800055c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000560:	200001c8 	.word	0x200001c8

08000564 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000564:	e7fe      	b.n	8000564 <ADC_IRQHandler>
	...

08000568 <std>:
 8000568:	2300      	movs	r3, #0
 800056a:	b510      	push	{r4, lr}
 800056c:	4604      	mov	r4, r0
 800056e:	e9c0 3300 	strd	r3, r3, [r0]
 8000572:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000576:	6083      	str	r3, [r0, #8]
 8000578:	8181      	strh	r1, [r0, #12]
 800057a:	6643      	str	r3, [r0, #100]	@ 0x64
 800057c:	81c2      	strh	r2, [r0, #14]
 800057e:	6183      	str	r3, [r0, #24]
 8000580:	4619      	mov	r1, r3
 8000582:	2208      	movs	r2, #8
 8000584:	305c      	adds	r0, #92	@ 0x5c
 8000586:	f000 f906 	bl	8000796 <memset>
 800058a:	4b0d      	ldr	r3, [pc, #52]	@ (80005c0 <std+0x58>)
 800058c:	6263      	str	r3, [r4, #36]	@ 0x24
 800058e:	4b0d      	ldr	r3, [pc, #52]	@ (80005c4 <std+0x5c>)
 8000590:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000592:	4b0d      	ldr	r3, [pc, #52]	@ (80005c8 <std+0x60>)
 8000594:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000596:	4b0d      	ldr	r3, [pc, #52]	@ (80005cc <std+0x64>)
 8000598:	6323      	str	r3, [r4, #48]	@ 0x30
 800059a:	4b0d      	ldr	r3, [pc, #52]	@ (80005d0 <std+0x68>)
 800059c:	6224      	str	r4, [r4, #32]
 800059e:	429c      	cmp	r4, r3
 80005a0:	d006      	beq.n	80005b0 <std+0x48>
 80005a2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80005a6:	4294      	cmp	r4, r2
 80005a8:	d002      	beq.n	80005b0 <std+0x48>
 80005aa:	33d0      	adds	r3, #208	@ 0xd0
 80005ac:	429c      	cmp	r4, r3
 80005ae:	d105      	bne.n	80005bc <std+0x54>
 80005b0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80005b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005b8:	f000 b966 	b.w	8000888 <__retarget_lock_init_recursive>
 80005bc:	bd10      	pop	{r4, pc}
 80005be:	bf00      	nop
 80005c0:	08000711 	.word	0x08000711
 80005c4:	08000733 	.word	0x08000733
 80005c8:	0800076b 	.word	0x0800076b
 80005cc:	0800078f 	.word	0x0800078f
 80005d0:	2000007c 	.word	0x2000007c

080005d4 <stdio_exit_handler>:
 80005d4:	4a02      	ldr	r2, [pc, #8]	@ (80005e0 <stdio_exit_handler+0xc>)
 80005d6:	4903      	ldr	r1, [pc, #12]	@ (80005e4 <stdio_exit_handler+0x10>)
 80005d8:	4803      	ldr	r0, [pc, #12]	@ (80005e8 <stdio_exit_handler+0x14>)
 80005da:	f000 b869 	b.w	80006b0 <_fwalk_sglue>
 80005de:	bf00      	nop
 80005e0:	20000000 	.word	0x20000000
 80005e4:	08001125 	.word	0x08001125
 80005e8:	20000010 	.word	0x20000010

080005ec <cleanup_stdio>:
 80005ec:	6841      	ldr	r1, [r0, #4]
 80005ee:	4b0c      	ldr	r3, [pc, #48]	@ (8000620 <cleanup_stdio+0x34>)
 80005f0:	4299      	cmp	r1, r3
 80005f2:	b510      	push	{r4, lr}
 80005f4:	4604      	mov	r4, r0
 80005f6:	d001      	beq.n	80005fc <cleanup_stdio+0x10>
 80005f8:	f000 fd94 	bl	8001124 <_fflush_r>
 80005fc:	68a1      	ldr	r1, [r4, #8]
 80005fe:	4b09      	ldr	r3, [pc, #36]	@ (8000624 <cleanup_stdio+0x38>)
 8000600:	4299      	cmp	r1, r3
 8000602:	d002      	beq.n	800060a <cleanup_stdio+0x1e>
 8000604:	4620      	mov	r0, r4
 8000606:	f000 fd8d 	bl	8001124 <_fflush_r>
 800060a:	68e1      	ldr	r1, [r4, #12]
 800060c:	4b06      	ldr	r3, [pc, #24]	@ (8000628 <cleanup_stdio+0x3c>)
 800060e:	4299      	cmp	r1, r3
 8000610:	d004      	beq.n	800061c <cleanup_stdio+0x30>
 8000612:	4620      	mov	r0, r4
 8000614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000618:	f000 bd84 	b.w	8001124 <_fflush_r>
 800061c:	bd10      	pop	{r4, pc}
 800061e:	bf00      	nop
 8000620:	2000007c 	.word	0x2000007c
 8000624:	200000e4 	.word	0x200000e4
 8000628:	2000014c 	.word	0x2000014c

0800062c <global_stdio_init.part.0>:
 800062c:	b510      	push	{r4, lr}
 800062e:	4b0b      	ldr	r3, [pc, #44]	@ (800065c <global_stdio_init.part.0+0x30>)
 8000630:	4c0b      	ldr	r4, [pc, #44]	@ (8000660 <global_stdio_init.part.0+0x34>)
 8000632:	4a0c      	ldr	r2, [pc, #48]	@ (8000664 <global_stdio_init.part.0+0x38>)
 8000634:	601a      	str	r2, [r3, #0]
 8000636:	4620      	mov	r0, r4
 8000638:	2200      	movs	r2, #0
 800063a:	2104      	movs	r1, #4
 800063c:	f7ff ff94 	bl	8000568 <std>
 8000640:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000644:	2201      	movs	r2, #1
 8000646:	2109      	movs	r1, #9
 8000648:	f7ff ff8e 	bl	8000568 <std>
 800064c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000650:	2202      	movs	r2, #2
 8000652:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000656:	2112      	movs	r1, #18
 8000658:	f7ff bf86 	b.w	8000568 <std>
 800065c:	200001b4 	.word	0x200001b4
 8000660:	2000007c 	.word	0x2000007c
 8000664:	080005d5 	.word	0x080005d5

08000668 <__sfp_lock_acquire>:
 8000668:	4801      	ldr	r0, [pc, #4]	@ (8000670 <__sfp_lock_acquire+0x8>)
 800066a:	f000 b90e 	b.w	800088a <__retarget_lock_acquire_recursive>
 800066e:	bf00      	nop
 8000670:	200001bd 	.word	0x200001bd

08000674 <__sfp_lock_release>:
 8000674:	4801      	ldr	r0, [pc, #4]	@ (800067c <__sfp_lock_release+0x8>)
 8000676:	f000 b909 	b.w	800088c <__retarget_lock_release_recursive>
 800067a:	bf00      	nop
 800067c:	200001bd 	.word	0x200001bd

08000680 <__sinit>:
 8000680:	b510      	push	{r4, lr}
 8000682:	4604      	mov	r4, r0
 8000684:	f7ff fff0 	bl	8000668 <__sfp_lock_acquire>
 8000688:	6a23      	ldr	r3, [r4, #32]
 800068a:	b11b      	cbz	r3, 8000694 <__sinit+0x14>
 800068c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000690:	f7ff bff0 	b.w	8000674 <__sfp_lock_release>
 8000694:	4b04      	ldr	r3, [pc, #16]	@ (80006a8 <__sinit+0x28>)
 8000696:	6223      	str	r3, [r4, #32]
 8000698:	4b04      	ldr	r3, [pc, #16]	@ (80006ac <__sinit+0x2c>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	2b00      	cmp	r3, #0
 800069e:	d1f5      	bne.n	800068c <__sinit+0xc>
 80006a0:	f7ff ffc4 	bl	800062c <global_stdio_init.part.0>
 80006a4:	e7f2      	b.n	800068c <__sinit+0xc>
 80006a6:	bf00      	nop
 80006a8:	080005ed 	.word	0x080005ed
 80006ac:	200001b4 	.word	0x200001b4

080006b0 <_fwalk_sglue>:
 80006b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006b4:	4607      	mov	r7, r0
 80006b6:	4688      	mov	r8, r1
 80006b8:	4614      	mov	r4, r2
 80006ba:	2600      	movs	r6, #0
 80006bc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006c0:	f1b9 0901 	subs.w	r9, r9, #1
 80006c4:	d505      	bpl.n	80006d2 <_fwalk_sglue+0x22>
 80006c6:	6824      	ldr	r4, [r4, #0]
 80006c8:	2c00      	cmp	r4, #0
 80006ca:	d1f7      	bne.n	80006bc <_fwalk_sglue+0xc>
 80006cc:	4630      	mov	r0, r6
 80006ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006d2:	89ab      	ldrh	r3, [r5, #12]
 80006d4:	2b01      	cmp	r3, #1
 80006d6:	d907      	bls.n	80006e8 <_fwalk_sglue+0x38>
 80006d8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006dc:	3301      	adds	r3, #1
 80006de:	d003      	beq.n	80006e8 <_fwalk_sglue+0x38>
 80006e0:	4629      	mov	r1, r5
 80006e2:	4638      	mov	r0, r7
 80006e4:	47c0      	blx	r8
 80006e6:	4306      	orrs	r6, r0
 80006e8:	3568      	adds	r5, #104	@ 0x68
 80006ea:	e7e9      	b.n	80006c0 <_fwalk_sglue+0x10>

080006ec <iprintf>:
 80006ec:	b40f      	push	{r0, r1, r2, r3}
 80006ee:	b507      	push	{r0, r1, r2, lr}
 80006f0:	4906      	ldr	r1, [pc, #24]	@ (800070c <iprintf+0x20>)
 80006f2:	ab04      	add	r3, sp, #16
 80006f4:	6808      	ldr	r0, [r1, #0]
 80006f6:	f853 2b04 	ldr.w	r2, [r3], #4
 80006fa:	6881      	ldr	r1, [r0, #8]
 80006fc:	9301      	str	r3, [sp, #4]
 80006fe:	f000 f9e9 	bl	8000ad4 <_vfiprintf_r>
 8000702:	b003      	add	sp, #12
 8000704:	f85d eb04 	ldr.w	lr, [sp], #4
 8000708:	b004      	add	sp, #16
 800070a:	4770      	bx	lr
 800070c:	2000000c 	.word	0x2000000c

08000710 <__sread>:
 8000710:	b510      	push	{r4, lr}
 8000712:	460c      	mov	r4, r1
 8000714:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000718:	f000 f868 	bl	80007ec <_read_r>
 800071c:	2800      	cmp	r0, #0
 800071e:	bfab      	itete	ge
 8000720:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000722:	89a3      	ldrhlt	r3, [r4, #12]
 8000724:	181b      	addge	r3, r3, r0
 8000726:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800072a:	bfac      	ite	ge
 800072c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800072e:	81a3      	strhlt	r3, [r4, #12]
 8000730:	bd10      	pop	{r4, pc}

08000732 <__swrite>:
 8000732:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000736:	461f      	mov	r7, r3
 8000738:	898b      	ldrh	r3, [r1, #12]
 800073a:	05db      	lsls	r3, r3, #23
 800073c:	4605      	mov	r5, r0
 800073e:	460c      	mov	r4, r1
 8000740:	4616      	mov	r6, r2
 8000742:	d505      	bpl.n	8000750 <__swrite+0x1e>
 8000744:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000748:	2302      	movs	r3, #2
 800074a:	2200      	movs	r2, #0
 800074c:	f000 f83c 	bl	80007c8 <_lseek_r>
 8000750:	89a3      	ldrh	r3, [r4, #12]
 8000752:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000756:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800075a:	81a3      	strh	r3, [r4, #12]
 800075c:	4632      	mov	r2, r6
 800075e:	463b      	mov	r3, r7
 8000760:	4628      	mov	r0, r5
 8000762:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000766:	f000 b853 	b.w	8000810 <_write_r>

0800076a <__sseek>:
 800076a:	b510      	push	{r4, lr}
 800076c:	460c      	mov	r4, r1
 800076e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000772:	f000 f829 	bl	80007c8 <_lseek_r>
 8000776:	1c43      	adds	r3, r0, #1
 8000778:	89a3      	ldrh	r3, [r4, #12]
 800077a:	bf15      	itete	ne
 800077c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800077e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000782:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000786:	81a3      	strheq	r3, [r4, #12]
 8000788:	bf18      	it	ne
 800078a:	81a3      	strhne	r3, [r4, #12]
 800078c:	bd10      	pop	{r4, pc}

0800078e <__sclose>:
 800078e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000792:	f000 b809 	b.w	80007a8 <_close_r>

08000796 <memset>:
 8000796:	4402      	add	r2, r0
 8000798:	4603      	mov	r3, r0
 800079a:	4293      	cmp	r3, r2
 800079c:	d100      	bne.n	80007a0 <memset+0xa>
 800079e:	4770      	bx	lr
 80007a0:	f803 1b01 	strb.w	r1, [r3], #1
 80007a4:	e7f9      	b.n	800079a <memset+0x4>
	...

080007a8 <_close_r>:
 80007a8:	b538      	push	{r3, r4, r5, lr}
 80007aa:	4d06      	ldr	r5, [pc, #24]	@ (80007c4 <_close_r+0x1c>)
 80007ac:	2300      	movs	r3, #0
 80007ae:	4604      	mov	r4, r0
 80007b0:	4608      	mov	r0, r1
 80007b2:	602b      	str	r3, [r5, #0]
 80007b4:	f7ff fda7 	bl	8000306 <_close>
 80007b8:	1c43      	adds	r3, r0, #1
 80007ba:	d102      	bne.n	80007c2 <_close_r+0x1a>
 80007bc:	682b      	ldr	r3, [r5, #0]
 80007be:	b103      	cbz	r3, 80007c2 <_close_r+0x1a>
 80007c0:	6023      	str	r3, [r4, #0]
 80007c2:	bd38      	pop	{r3, r4, r5, pc}
 80007c4:	200001b8 	.word	0x200001b8

080007c8 <_lseek_r>:
 80007c8:	b538      	push	{r3, r4, r5, lr}
 80007ca:	4d07      	ldr	r5, [pc, #28]	@ (80007e8 <_lseek_r+0x20>)
 80007cc:	4604      	mov	r4, r0
 80007ce:	4608      	mov	r0, r1
 80007d0:	4611      	mov	r1, r2
 80007d2:	2200      	movs	r2, #0
 80007d4:	602a      	str	r2, [r5, #0]
 80007d6:	461a      	mov	r2, r3
 80007d8:	f7ff fdbc 	bl	8000354 <_lseek>
 80007dc:	1c43      	adds	r3, r0, #1
 80007de:	d102      	bne.n	80007e6 <_lseek_r+0x1e>
 80007e0:	682b      	ldr	r3, [r5, #0]
 80007e2:	b103      	cbz	r3, 80007e6 <_lseek_r+0x1e>
 80007e4:	6023      	str	r3, [r4, #0]
 80007e6:	bd38      	pop	{r3, r4, r5, pc}
 80007e8:	200001b8 	.word	0x200001b8

080007ec <_read_r>:
 80007ec:	b538      	push	{r3, r4, r5, lr}
 80007ee:	4d07      	ldr	r5, [pc, #28]	@ (800080c <_read_r+0x20>)
 80007f0:	4604      	mov	r4, r0
 80007f2:	4608      	mov	r0, r1
 80007f4:	4611      	mov	r1, r2
 80007f6:	2200      	movs	r2, #0
 80007f8:	602a      	str	r2, [r5, #0]
 80007fa:	461a      	mov	r2, r3
 80007fc:	f7ff fd4a 	bl	8000294 <_read>
 8000800:	1c43      	adds	r3, r0, #1
 8000802:	d102      	bne.n	800080a <_read_r+0x1e>
 8000804:	682b      	ldr	r3, [r5, #0]
 8000806:	b103      	cbz	r3, 800080a <_read_r+0x1e>
 8000808:	6023      	str	r3, [r4, #0]
 800080a:	bd38      	pop	{r3, r4, r5, pc}
 800080c:	200001b8 	.word	0x200001b8

08000810 <_write_r>:
 8000810:	b538      	push	{r3, r4, r5, lr}
 8000812:	4d07      	ldr	r5, [pc, #28]	@ (8000830 <_write_r+0x20>)
 8000814:	4604      	mov	r4, r0
 8000816:	4608      	mov	r0, r1
 8000818:	4611      	mov	r1, r2
 800081a:	2200      	movs	r2, #0
 800081c:	602a      	str	r2, [r5, #0]
 800081e:	461a      	mov	r2, r3
 8000820:	f7ff fd55 	bl	80002ce <_write>
 8000824:	1c43      	adds	r3, r0, #1
 8000826:	d102      	bne.n	800082e <_write_r+0x1e>
 8000828:	682b      	ldr	r3, [r5, #0]
 800082a:	b103      	cbz	r3, 800082e <_write_r+0x1e>
 800082c:	6023      	str	r3, [r4, #0]
 800082e:	bd38      	pop	{r3, r4, r5, pc}
 8000830:	200001b8 	.word	0x200001b8

08000834 <__errno>:
 8000834:	4b01      	ldr	r3, [pc, #4]	@ (800083c <__errno+0x8>)
 8000836:	6818      	ldr	r0, [r3, #0]
 8000838:	4770      	bx	lr
 800083a:	bf00      	nop
 800083c:	2000000c 	.word	0x2000000c

08000840 <__libc_init_array>:
 8000840:	b570      	push	{r4, r5, r6, lr}
 8000842:	4d0d      	ldr	r5, [pc, #52]	@ (8000878 <__libc_init_array+0x38>)
 8000844:	4c0d      	ldr	r4, [pc, #52]	@ (800087c <__libc_init_array+0x3c>)
 8000846:	1b64      	subs	r4, r4, r5
 8000848:	10a4      	asrs	r4, r4, #2
 800084a:	2600      	movs	r6, #0
 800084c:	42a6      	cmp	r6, r4
 800084e:	d109      	bne.n	8000864 <__libc_init_array+0x24>
 8000850:	4d0b      	ldr	r5, [pc, #44]	@ (8000880 <__libc_init_array+0x40>)
 8000852:	4c0c      	ldr	r4, [pc, #48]	@ (8000884 <__libc_init_array+0x44>)
 8000854:	f000 fdb6 	bl	80013c4 <_init>
 8000858:	1b64      	subs	r4, r4, r5
 800085a:	10a4      	asrs	r4, r4, #2
 800085c:	2600      	movs	r6, #0
 800085e:	42a6      	cmp	r6, r4
 8000860:	d105      	bne.n	800086e <__libc_init_array+0x2e>
 8000862:	bd70      	pop	{r4, r5, r6, pc}
 8000864:	f855 3b04 	ldr.w	r3, [r5], #4
 8000868:	4798      	blx	r3
 800086a:	3601      	adds	r6, #1
 800086c:	e7ee      	b.n	800084c <__libc_init_array+0xc>
 800086e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000872:	4798      	blx	r3
 8000874:	3601      	adds	r6, #1
 8000876:	e7f2      	b.n	800085e <__libc_init_array+0x1e>
 8000878:	08001434 	.word	0x08001434
 800087c:	08001434 	.word	0x08001434
 8000880:	08001434 	.word	0x08001434
 8000884:	08001438 	.word	0x08001438

08000888 <__retarget_lock_init_recursive>:
 8000888:	4770      	bx	lr

0800088a <__retarget_lock_acquire_recursive>:
 800088a:	4770      	bx	lr

0800088c <__retarget_lock_release_recursive>:
 800088c:	4770      	bx	lr
	...

08000890 <_free_r>:
 8000890:	b538      	push	{r3, r4, r5, lr}
 8000892:	4605      	mov	r5, r0
 8000894:	2900      	cmp	r1, #0
 8000896:	d041      	beq.n	800091c <_free_r+0x8c>
 8000898:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800089c:	1f0c      	subs	r4, r1, #4
 800089e:	2b00      	cmp	r3, #0
 80008a0:	bfb8      	it	lt
 80008a2:	18e4      	addlt	r4, r4, r3
 80008a4:	f000 f8e0 	bl	8000a68 <__malloc_lock>
 80008a8:	4a1d      	ldr	r2, [pc, #116]	@ (8000920 <_free_r+0x90>)
 80008aa:	6813      	ldr	r3, [r2, #0]
 80008ac:	b933      	cbnz	r3, 80008bc <_free_r+0x2c>
 80008ae:	6063      	str	r3, [r4, #4]
 80008b0:	6014      	str	r4, [r2, #0]
 80008b2:	4628      	mov	r0, r5
 80008b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80008b8:	f000 b8dc 	b.w	8000a74 <__malloc_unlock>
 80008bc:	42a3      	cmp	r3, r4
 80008be:	d908      	bls.n	80008d2 <_free_r+0x42>
 80008c0:	6820      	ldr	r0, [r4, #0]
 80008c2:	1821      	adds	r1, r4, r0
 80008c4:	428b      	cmp	r3, r1
 80008c6:	bf01      	itttt	eq
 80008c8:	6819      	ldreq	r1, [r3, #0]
 80008ca:	685b      	ldreq	r3, [r3, #4]
 80008cc:	1809      	addeq	r1, r1, r0
 80008ce:	6021      	streq	r1, [r4, #0]
 80008d0:	e7ed      	b.n	80008ae <_free_r+0x1e>
 80008d2:	461a      	mov	r2, r3
 80008d4:	685b      	ldr	r3, [r3, #4]
 80008d6:	b10b      	cbz	r3, 80008dc <_free_r+0x4c>
 80008d8:	42a3      	cmp	r3, r4
 80008da:	d9fa      	bls.n	80008d2 <_free_r+0x42>
 80008dc:	6811      	ldr	r1, [r2, #0]
 80008de:	1850      	adds	r0, r2, r1
 80008e0:	42a0      	cmp	r0, r4
 80008e2:	d10b      	bne.n	80008fc <_free_r+0x6c>
 80008e4:	6820      	ldr	r0, [r4, #0]
 80008e6:	4401      	add	r1, r0
 80008e8:	1850      	adds	r0, r2, r1
 80008ea:	4283      	cmp	r3, r0
 80008ec:	6011      	str	r1, [r2, #0]
 80008ee:	d1e0      	bne.n	80008b2 <_free_r+0x22>
 80008f0:	6818      	ldr	r0, [r3, #0]
 80008f2:	685b      	ldr	r3, [r3, #4]
 80008f4:	6053      	str	r3, [r2, #4]
 80008f6:	4408      	add	r0, r1
 80008f8:	6010      	str	r0, [r2, #0]
 80008fa:	e7da      	b.n	80008b2 <_free_r+0x22>
 80008fc:	d902      	bls.n	8000904 <_free_r+0x74>
 80008fe:	230c      	movs	r3, #12
 8000900:	602b      	str	r3, [r5, #0]
 8000902:	e7d6      	b.n	80008b2 <_free_r+0x22>
 8000904:	6820      	ldr	r0, [r4, #0]
 8000906:	1821      	adds	r1, r4, r0
 8000908:	428b      	cmp	r3, r1
 800090a:	bf04      	itt	eq
 800090c:	6819      	ldreq	r1, [r3, #0]
 800090e:	685b      	ldreq	r3, [r3, #4]
 8000910:	6063      	str	r3, [r4, #4]
 8000912:	bf04      	itt	eq
 8000914:	1809      	addeq	r1, r1, r0
 8000916:	6021      	streq	r1, [r4, #0]
 8000918:	6054      	str	r4, [r2, #4]
 800091a:	e7ca      	b.n	80008b2 <_free_r+0x22>
 800091c:	bd38      	pop	{r3, r4, r5, pc}
 800091e:	bf00      	nop
 8000920:	200001c4 	.word	0x200001c4

08000924 <sbrk_aligned>:
 8000924:	b570      	push	{r4, r5, r6, lr}
 8000926:	4e0f      	ldr	r6, [pc, #60]	@ (8000964 <sbrk_aligned+0x40>)
 8000928:	460c      	mov	r4, r1
 800092a:	6831      	ldr	r1, [r6, #0]
 800092c:	4605      	mov	r5, r0
 800092e:	b911      	cbnz	r1, 8000936 <sbrk_aligned+0x12>
 8000930:	f000 fcb4 	bl	800129c <_sbrk_r>
 8000934:	6030      	str	r0, [r6, #0]
 8000936:	4621      	mov	r1, r4
 8000938:	4628      	mov	r0, r5
 800093a:	f000 fcaf 	bl	800129c <_sbrk_r>
 800093e:	1c43      	adds	r3, r0, #1
 8000940:	d103      	bne.n	800094a <sbrk_aligned+0x26>
 8000942:	f04f 34ff 	mov.w	r4, #4294967295
 8000946:	4620      	mov	r0, r4
 8000948:	bd70      	pop	{r4, r5, r6, pc}
 800094a:	1cc4      	adds	r4, r0, #3
 800094c:	f024 0403 	bic.w	r4, r4, #3
 8000950:	42a0      	cmp	r0, r4
 8000952:	d0f8      	beq.n	8000946 <sbrk_aligned+0x22>
 8000954:	1a21      	subs	r1, r4, r0
 8000956:	4628      	mov	r0, r5
 8000958:	f000 fca0 	bl	800129c <_sbrk_r>
 800095c:	3001      	adds	r0, #1
 800095e:	d1f2      	bne.n	8000946 <sbrk_aligned+0x22>
 8000960:	e7ef      	b.n	8000942 <sbrk_aligned+0x1e>
 8000962:	bf00      	nop
 8000964:	200001c0 	.word	0x200001c0

08000968 <_malloc_r>:
 8000968:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800096c:	1ccd      	adds	r5, r1, #3
 800096e:	f025 0503 	bic.w	r5, r5, #3
 8000972:	3508      	adds	r5, #8
 8000974:	2d0c      	cmp	r5, #12
 8000976:	bf38      	it	cc
 8000978:	250c      	movcc	r5, #12
 800097a:	2d00      	cmp	r5, #0
 800097c:	4606      	mov	r6, r0
 800097e:	db01      	blt.n	8000984 <_malloc_r+0x1c>
 8000980:	42a9      	cmp	r1, r5
 8000982:	d904      	bls.n	800098e <_malloc_r+0x26>
 8000984:	230c      	movs	r3, #12
 8000986:	6033      	str	r3, [r6, #0]
 8000988:	2000      	movs	r0, #0
 800098a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800098e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000a64 <_malloc_r+0xfc>
 8000992:	f000 f869 	bl	8000a68 <__malloc_lock>
 8000996:	f8d8 3000 	ldr.w	r3, [r8]
 800099a:	461c      	mov	r4, r3
 800099c:	bb44      	cbnz	r4, 80009f0 <_malloc_r+0x88>
 800099e:	4629      	mov	r1, r5
 80009a0:	4630      	mov	r0, r6
 80009a2:	f7ff ffbf 	bl	8000924 <sbrk_aligned>
 80009a6:	1c43      	adds	r3, r0, #1
 80009a8:	4604      	mov	r4, r0
 80009aa:	d158      	bne.n	8000a5e <_malloc_r+0xf6>
 80009ac:	f8d8 4000 	ldr.w	r4, [r8]
 80009b0:	4627      	mov	r7, r4
 80009b2:	2f00      	cmp	r7, #0
 80009b4:	d143      	bne.n	8000a3e <_malloc_r+0xd6>
 80009b6:	2c00      	cmp	r4, #0
 80009b8:	d04b      	beq.n	8000a52 <_malloc_r+0xea>
 80009ba:	6823      	ldr	r3, [r4, #0]
 80009bc:	4639      	mov	r1, r7
 80009be:	4630      	mov	r0, r6
 80009c0:	eb04 0903 	add.w	r9, r4, r3
 80009c4:	f000 fc6a 	bl	800129c <_sbrk_r>
 80009c8:	4581      	cmp	r9, r0
 80009ca:	d142      	bne.n	8000a52 <_malloc_r+0xea>
 80009cc:	6821      	ldr	r1, [r4, #0]
 80009ce:	1a6d      	subs	r5, r5, r1
 80009d0:	4629      	mov	r1, r5
 80009d2:	4630      	mov	r0, r6
 80009d4:	f7ff ffa6 	bl	8000924 <sbrk_aligned>
 80009d8:	3001      	adds	r0, #1
 80009da:	d03a      	beq.n	8000a52 <_malloc_r+0xea>
 80009dc:	6823      	ldr	r3, [r4, #0]
 80009de:	442b      	add	r3, r5
 80009e0:	6023      	str	r3, [r4, #0]
 80009e2:	f8d8 3000 	ldr.w	r3, [r8]
 80009e6:	685a      	ldr	r2, [r3, #4]
 80009e8:	bb62      	cbnz	r2, 8000a44 <_malloc_r+0xdc>
 80009ea:	f8c8 7000 	str.w	r7, [r8]
 80009ee:	e00f      	b.n	8000a10 <_malloc_r+0xa8>
 80009f0:	6822      	ldr	r2, [r4, #0]
 80009f2:	1b52      	subs	r2, r2, r5
 80009f4:	d420      	bmi.n	8000a38 <_malloc_r+0xd0>
 80009f6:	2a0b      	cmp	r2, #11
 80009f8:	d917      	bls.n	8000a2a <_malloc_r+0xc2>
 80009fa:	1961      	adds	r1, r4, r5
 80009fc:	42a3      	cmp	r3, r4
 80009fe:	6025      	str	r5, [r4, #0]
 8000a00:	bf18      	it	ne
 8000a02:	6059      	strne	r1, [r3, #4]
 8000a04:	6863      	ldr	r3, [r4, #4]
 8000a06:	bf08      	it	eq
 8000a08:	f8c8 1000 	streq.w	r1, [r8]
 8000a0c:	5162      	str	r2, [r4, r5]
 8000a0e:	604b      	str	r3, [r1, #4]
 8000a10:	4630      	mov	r0, r6
 8000a12:	f000 f82f 	bl	8000a74 <__malloc_unlock>
 8000a16:	f104 000b 	add.w	r0, r4, #11
 8000a1a:	1d23      	adds	r3, r4, #4
 8000a1c:	f020 0007 	bic.w	r0, r0, #7
 8000a20:	1ac2      	subs	r2, r0, r3
 8000a22:	bf1c      	itt	ne
 8000a24:	1a1b      	subne	r3, r3, r0
 8000a26:	50a3      	strne	r3, [r4, r2]
 8000a28:	e7af      	b.n	800098a <_malloc_r+0x22>
 8000a2a:	6862      	ldr	r2, [r4, #4]
 8000a2c:	42a3      	cmp	r3, r4
 8000a2e:	bf0c      	ite	eq
 8000a30:	f8c8 2000 	streq.w	r2, [r8]
 8000a34:	605a      	strne	r2, [r3, #4]
 8000a36:	e7eb      	b.n	8000a10 <_malloc_r+0xa8>
 8000a38:	4623      	mov	r3, r4
 8000a3a:	6864      	ldr	r4, [r4, #4]
 8000a3c:	e7ae      	b.n	800099c <_malloc_r+0x34>
 8000a3e:	463c      	mov	r4, r7
 8000a40:	687f      	ldr	r7, [r7, #4]
 8000a42:	e7b6      	b.n	80009b2 <_malloc_r+0x4a>
 8000a44:	461a      	mov	r2, r3
 8000a46:	685b      	ldr	r3, [r3, #4]
 8000a48:	42a3      	cmp	r3, r4
 8000a4a:	d1fb      	bne.n	8000a44 <_malloc_r+0xdc>
 8000a4c:	2300      	movs	r3, #0
 8000a4e:	6053      	str	r3, [r2, #4]
 8000a50:	e7de      	b.n	8000a10 <_malloc_r+0xa8>
 8000a52:	230c      	movs	r3, #12
 8000a54:	6033      	str	r3, [r6, #0]
 8000a56:	4630      	mov	r0, r6
 8000a58:	f000 f80c 	bl	8000a74 <__malloc_unlock>
 8000a5c:	e794      	b.n	8000988 <_malloc_r+0x20>
 8000a5e:	6005      	str	r5, [r0, #0]
 8000a60:	e7d6      	b.n	8000a10 <_malloc_r+0xa8>
 8000a62:	bf00      	nop
 8000a64:	200001c4 	.word	0x200001c4

08000a68 <__malloc_lock>:
 8000a68:	4801      	ldr	r0, [pc, #4]	@ (8000a70 <__malloc_lock+0x8>)
 8000a6a:	f7ff bf0e 	b.w	800088a <__retarget_lock_acquire_recursive>
 8000a6e:	bf00      	nop
 8000a70:	200001bc 	.word	0x200001bc

08000a74 <__malloc_unlock>:
 8000a74:	4801      	ldr	r0, [pc, #4]	@ (8000a7c <__malloc_unlock+0x8>)
 8000a76:	f7ff bf09 	b.w	800088c <__retarget_lock_release_recursive>
 8000a7a:	bf00      	nop
 8000a7c:	200001bc 	.word	0x200001bc

08000a80 <__sfputc_r>:
 8000a80:	6893      	ldr	r3, [r2, #8]
 8000a82:	3b01      	subs	r3, #1
 8000a84:	2b00      	cmp	r3, #0
 8000a86:	b410      	push	{r4}
 8000a88:	6093      	str	r3, [r2, #8]
 8000a8a:	da08      	bge.n	8000a9e <__sfputc_r+0x1e>
 8000a8c:	6994      	ldr	r4, [r2, #24]
 8000a8e:	42a3      	cmp	r3, r4
 8000a90:	db01      	blt.n	8000a96 <__sfputc_r+0x16>
 8000a92:	290a      	cmp	r1, #10
 8000a94:	d103      	bne.n	8000a9e <__sfputc_r+0x1e>
 8000a96:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a9a:	f000 bb6b 	b.w	8001174 <__swbuf_r>
 8000a9e:	6813      	ldr	r3, [r2, #0]
 8000aa0:	1c58      	adds	r0, r3, #1
 8000aa2:	6010      	str	r0, [r2, #0]
 8000aa4:	7019      	strb	r1, [r3, #0]
 8000aa6:	4608      	mov	r0, r1
 8000aa8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000aac:	4770      	bx	lr

08000aae <__sfputs_r>:
 8000aae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ab0:	4606      	mov	r6, r0
 8000ab2:	460f      	mov	r7, r1
 8000ab4:	4614      	mov	r4, r2
 8000ab6:	18d5      	adds	r5, r2, r3
 8000ab8:	42ac      	cmp	r4, r5
 8000aba:	d101      	bne.n	8000ac0 <__sfputs_r+0x12>
 8000abc:	2000      	movs	r0, #0
 8000abe:	e007      	b.n	8000ad0 <__sfputs_r+0x22>
 8000ac0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ac4:	463a      	mov	r2, r7
 8000ac6:	4630      	mov	r0, r6
 8000ac8:	f7ff ffda 	bl	8000a80 <__sfputc_r>
 8000acc:	1c43      	adds	r3, r0, #1
 8000ace:	d1f3      	bne.n	8000ab8 <__sfputs_r+0xa>
 8000ad0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ad4 <_vfiprintf_r>:
 8000ad4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ad8:	460d      	mov	r5, r1
 8000ada:	b09d      	sub	sp, #116	@ 0x74
 8000adc:	4614      	mov	r4, r2
 8000ade:	4698      	mov	r8, r3
 8000ae0:	4606      	mov	r6, r0
 8000ae2:	b118      	cbz	r0, 8000aec <_vfiprintf_r+0x18>
 8000ae4:	6a03      	ldr	r3, [r0, #32]
 8000ae6:	b90b      	cbnz	r3, 8000aec <_vfiprintf_r+0x18>
 8000ae8:	f7ff fdca 	bl	8000680 <__sinit>
 8000aec:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000aee:	07d9      	lsls	r1, r3, #31
 8000af0:	d405      	bmi.n	8000afe <_vfiprintf_r+0x2a>
 8000af2:	89ab      	ldrh	r3, [r5, #12]
 8000af4:	059a      	lsls	r2, r3, #22
 8000af6:	d402      	bmi.n	8000afe <_vfiprintf_r+0x2a>
 8000af8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000afa:	f7ff fec6 	bl	800088a <__retarget_lock_acquire_recursive>
 8000afe:	89ab      	ldrh	r3, [r5, #12]
 8000b00:	071b      	lsls	r3, r3, #28
 8000b02:	d501      	bpl.n	8000b08 <_vfiprintf_r+0x34>
 8000b04:	692b      	ldr	r3, [r5, #16]
 8000b06:	b99b      	cbnz	r3, 8000b30 <_vfiprintf_r+0x5c>
 8000b08:	4629      	mov	r1, r5
 8000b0a:	4630      	mov	r0, r6
 8000b0c:	f000 fb70 	bl	80011f0 <__swsetup_r>
 8000b10:	b170      	cbz	r0, 8000b30 <_vfiprintf_r+0x5c>
 8000b12:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b14:	07dc      	lsls	r4, r3, #31
 8000b16:	d504      	bpl.n	8000b22 <_vfiprintf_r+0x4e>
 8000b18:	f04f 30ff 	mov.w	r0, #4294967295
 8000b1c:	b01d      	add	sp, #116	@ 0x74
 8000b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b22:	89ab      	ldrh	r3, [r5, #12]
 8000b24:	0598      	lsls	r0, r3, #22
 8000b26:	d4f7      	bmi.n	8000b18 <_vfiprintf_r+0x44>
 8000b28:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b2a:	f7ff feaf 	bl	800088c <__retarget_lock_release_recursive>
 8000b2e:	e7f3      	b.n	8000b18 <_vfiprintf_r+0x44>
 8000b30:	2300      	movs	r3, #0
 8000b32:	9309      	str	r3, [sp, #36]	@ 0x24
 8000b34:	2320      	movs	r3, #32
 8000b36:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000b3a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b3e:	2330      	movs	r3, #48	@ 0x30
 8000b40:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000cf0 <_vfiprintf_r+0x21c>
 8000b44:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000b48:	f04f 0901 	mov.w	r9, #1
 8000b4c:	4623      	mov	r3, r4
 8000b4e:	469a      	mov	sl, r3
 8000b50:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b54:	b10a      	cbz	r2, 8000b5a <_vfiprintf_r+0x86>
 8000b56:	2a25      	cmp	r2, #37	@ 0x25
 8000b58:	d1f9      	bne.n	8000b4e <_vfiprintf_r+0x7a>
 8000b5a:	ebba 0b04 	subs.w	fp, sl, r4
 8000b5e:	d00b      	beq.n	8000b78 <_vfiprintf_r+0xa4>
 8000b60:	465b      	mov	r3, fp
 8000b62:	4622      	mov	r2, r4
 8000b64:	4629      	mov	r1, r5
 8000b66:	4630      	mov	r0, r6
 8000b68:	f7ff ffa1 	bl	8000aae <__sfputs_r>
 8000b6c:	3001      	adds	r0, #1
 8000b6e:	f000 80a7 	beq.w	8000cc0 <_vfiprintf_r+0x1ec>
 8000b72:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000b74:	445a      	add	r2, fp
 8000b76:	9209      	str	r2, [sp, #36]	@ 0x24
 8000b78:	f89a 3000 	ldrb.w	r3, [sl]
 8000b7c:	2b00      	cmp	r3, #0
 8000b7e:	f000 809f 	beq.w	8000cc0 <_vfiprintf_r+0x1ec>
 8000b82:	2300      	movs	r3, #0
 8000b84:	f04f 32ff 	mov.w	r2, #4294967295
 8000b88:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b8c:	f10a 0a01 	add.w	sl, sl, #1
 8000b90:	9304      	str	r3, [sp, #16]
 8000b92:	9307      	str	r3, [sp, #28]
 8000b94:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000b98:	931a      	str	r3, [sp, #104]	@ 0x68
 8000b9a:	4654      	mov	r4, sl
 8000b9c:	2205      	movs	r2, #5
 8000b9e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ba2:	4853      	ldr	r0, [pc, #332]	@ (8000cf0 <_vfiprintf_r+0x21c>)
 8000ba4:	f7ff fb1c 	bl	80001e0 <memchr>
 8000ba8:	9a04      	ldr	r2, [sp, #16]
 8000baa:	b9d8      	cbnz	r0, 8000be4 <_vfiprintf_r+0x110>
 8000bac:	06d1      	lsls	r1, r2, #27
 8000bae:	bf44      	itt	mi
 8000bb0:	2320      	movmi	r3, #32
 8000bb2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000bb6:	0713      	lsls	r3, r2, #28
 8000bb8:	bf44      	itt	mi
 8000bba:	232b      	movmi	r3, #43	@ 0x2b
 8000bbc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000bc0:	f89a 3000 	ldrb.w	r3, [sl]
 8000bc4:	2b2a      	cmp	r3, #42	@ 0x2a
 8000bc6:	d015      	beq.n	8000bf4 <_vfiprintf_r+0x120>
 8000bc8:	9a07      	ldr	r2, [sp, #28]
 8000bca:	4654      	mov	r4, sl
 8000bcc:	2000      	movs	r0, #0
 8000bce:	f04f 0c0a 	mov.w	ip, #10
 8000bd2:	4621      	mov	r1, r4
 8000bd4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bd8:	3b30      	subs	r3, #48	@ 0x30
 8000bda:	2b09      	cmp	r3, #9
 8000bdc:	d94b      	bls.n	8000c76 <_vfiprintf_r+0x1a2>
 8000bde:	b1b0      	cbz	r0, 8000c0e <_vfiprintf_r+0x13a>
 8000be0:	9207      	str	r2, [sp, #28]
 8000be2:	e014      	b.n	8000c0e <_vfiprintf_r+0x13a>
 8000be4:	eba0 0308 	sub.w	r3, r0, r8
 8000be8:	fa09 f303 	lsl.w	r3, r9, r3
 8000bec:	4313      	orrs	r3, r2
 8000bee:	9304      	str	r3, [sp, #16]
 8000bf0:	46a2      	mov	sl, r4
 8000bf2:	e7d2      	b.n	8000b9a <_vfiprintf_r+0xc6>
 8000bf4:	9b03      	ldr	r3, [sp, #12]
 8000bf6:	1d19      	adds	r1, r3, #4
 8000bf8:	681b      	ldr	r3, [r3, #0]
 8000bfa:	9103      	str	r1, [sp, #12]
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	bfbb      	ittet	lt
 8000c00:	425b      	neglt	r3, r3
 8000c02:	f042 0202 	orrlt.w	r2, r2, #2
 8000c06:	9307      	strge	r3, [sp, #28]
 8000c08:	9307      	strlt	r3, [sp, #28]
 8000c0a:	bfb8      	it	lt
 8000c0c:	9204      	strlt	r2, [sp, #16]
 8000c0e:	7823      	ldrb	r3, [r4, #0]
 8000c10:	2b2e      	cmp	r3, #46	@ 0x2e
 8000c12:	d10a      	bne.n	8000c2a <_vfiprintf_r+0x156>
 8000c14:	7863      	ldrb	r3, [r4, #1]
 8000c16:	2b2a      	cmp	r3, #42	@ 0x2a
 8000c18:	d132      	bne.n	8000c80 <_vfiprintf_r+0x1ac>
 8000c1a:	9b03      	ldr	r3, [sp, #12]
 8000c1c:	1d1a      	adds	r2, r3, #4
 8000c1e:	681b      	ldr	r3, [r3, #0]
 8000c20:	9203      	str	r2, [sp, #12]
 8000c22:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000c26:	3402      	adds	r4, #2
 8000c28:	9305      	str	r3, [sp, #20]
 8000c2a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000d00 <_vfiprintf_r+0x22c>
 8000c2e:	7821      	ldrb	r1, [r4, #0]
 8000c30:	2203      	movs	r2, #3
 8000c32:	4650      	mov	r0, sl
 8000c34:	f7ff fad4 	bl	80001e0 <memchr>
 8000c38:	b138      	cbz	r0, 8000c4a <_vfiprintf_r+0x176>
 8000c3a:	9b04      	ldr	r3, [sp, #16]
 8000c3c:	eba0 000a 	sub.w	r0, r0, sl
 8000c40:	2240      	movs	r2, #64	@ 0x40
 8000c42:	4082      	lsls	r2, r0
 8000c44:	4313      	orrs	r3, r2
 8000c46:	3401      	adds	r4, #1
 8000c48:	9304      	str	r3, [sp, #16]
 8000c4a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c4e:	4829      	ldr	r0, [pc, #164]	@ (8000cf4 <_vfiprintf_r+0x220>)
 8000c50:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000c54:	2206      	movs	r2, #6
 8000c56:	f7ff fac3 	bl	80001e0 <memchr>
 8000c5a:	2800      	cmp	r0, #0
 8000c5c:	d03f      	beq.n	8000cde <_vfiprintf_r+0x20a>
 8000c5e:	4b26      	ldr	r3, [pc, #152]	@ (8000cf8 <_vfiprintf_r+0x224>)
 8000c60:	bb1b      	cbnz	r3, 8000caa <_vfiprintf_r+0x1d6>
 8000c62:	9b03      	ldr	r3, [sp, #12]
 8000c64:	3307      	adds	r3, #7
 8000c66:	f023 0307 	bic.w	r3, r3, #7
 8000c6a:	3308      	adds	r3, #8
 8000c6c:	9303      	str	r3, [sp, #12]
 8000c6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000c70:	443b      	add	r3, r7
 8000c72:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c74:	e76a      	b.n	8000b4c <_vfiprintf_r+0x78>
 8000c76:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c7a:	460c      	mov	r4, r1
 8000c7c:	2001      	movs	r0, #1
 8000c7e:	e7a8      	b.n	8000bd2 <_vfiprintf_r+0xfe>
 8000c80:	2300      	movs	r3, #0
 8000c82:	3401      	adds	r4, #1
 8000c84:	9305      	str	r3, [sp, #20]
 8000c86:	4619      	mov	r1, r3
 8000c88:	f04f 0c0a 	mov.w	ip, #10
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c92:	3a30      	subs	r2, #48	@ 0x30
 8000c94:	2a09      	cmp	r2, #9
 8000c96:	d903      	bls.n	8000ca0 <_vfiprintf_r+0x1cc>
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	d0c6      	beq.n	8000c2a <_vfiprintf_r+0x156>
 8000c9c:	9105      	str	r1, [sp, #20]
 8000c9e:	e7c4      	b.n	8000c2a <_vfiprintf_r+0x156>
 8000ca0:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ca4:	4604      	mov	r4, r0
 8000ca6:	2301      	movs	r3, #1
 8000ca8:	e7f0      	b.n	8000c8c <_vfiprintf_r+0x1b8>
 8000caa:	ab03      	add	r3, sp, #12
 8000cac:	9300      	str	r3, [sp, #0]
 8000cae:	462a      	mov	r2, r5
 8000cb0:	4b12      	ldr	r3, [pc, #72]	@ (8000cfc <_vfiprintf_r+0x228>)
 8000cb2:	a904      	add	r1, sp, #16
 8000cb4:	4630      	mov	r0, r6
 8000cb6:	f3af 8000 	nop.w
 8000cba:	4607      	mov	r7, r0
 8000cbc:	1c78      	adds	r0, r7, #1
 8000cbe:	d1d6      	bne.n	8000c6e <_vfiprintf_r+0x19a>
 8000cc0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cc2:	07d9      	lsls	r1, r3, #31
 8000cc4:	d405      	bmi.n	8000cd2 <_vfiprintf_r+0x1fe>
 8000cc6:	89ab      	ldrh	r3, [r5, #12]
 8000cc8:	059a      	lsls	r2, r3, #22
 8000cca:	d402      	bmi.n	8000cd2 <_vfiprintf_r+0x1fe>
 8000ccc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cce:	f7ff fddd 	bl	800088c <__retarget_lock_release_recursive>
 8000cd2:	89ab      	ldrh	r3, [r5, #12]
 8000cd4:	065b      	lsls	r3, r3, #25
 8000cd6:	f53f af1f 	bmi.w	8000b18 <_vfiprintf_r+0x44>
 8000cda:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000cdc:	e71e      	b.n	8000b1c <_vfiprintf_r+0x48>
 8000cde:	ab03      	add	r3, sp, #12
 8000ce0:	9300      	str	r3, [sp, #0]
 8000ce2:	462a      	mov	r2, r5
 8000ce4:	4b05      	ldr	r3, [pc, #20]	@ (8000cfc <_vfiprintf_r+0x228>)
 8000ce6:	a904      	add	r1, sp, #16
 8000ce8:	4630      	mov	r0, r6
 8000cea:	f000 f879 	bl	8000de0 <_printf_i>
 8000cee:	e7e4      	b.n	8000cba <_vfiprintf_r+0x1e6>
 8000cf0:	080013f9 	.word	0x080013f9
 8000cf4:	08001403 	.word	0x08001403
 8000cf8:	00000000 	.word	0x00000000
 8000cfc:	08000aaf 	.word	0x08000aaf
 8000d00:	080013ff 	.word	0x080013ff

08000d04 <_printf_common>:
 8000d04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d08:	4616      	mov	r6, r2
 8000d0a:	4698      	mov	r8, r3
 8000d0c:	688a      	ldr	r2, [r1, #8]
 8000d0e:	690b      	ldr	r3, [r1, #16]
 8000d10:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000d14:	4293      	cmp	r3, r2
 8000d16:	bfb8      	it	lt
 8000d18:	4613      	movlt	r3, r2
 8000d1a:	6033      	str	r3, [r6, #0]
 8000d1c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000d20:	4607      	mov	r7, r0
 8000d22:	460c      	mov	r4, r1
 8000d24:	b10a      	cbz	r2, 8000d2a <_printf_common+0x26>
 8000d26:	3301      	adds	r3, #1
 8000d28:	6033      	str	r3, [r6, #0]
 8000d2a:	6823      	ldr	r3, [r4, #0]
 8000d2c:	0699      	lsls	r1, r3, #26
 8000d2e:	bf42      	ittt	mi
 8000d30:	6833      	ldrmi	r3, [r6, #0]
 8000d32:	3302      	addmi	r3, #2
 8000d34:	6033      	strmi	r3, [r6, #0]
 8000d36:	6825      	ldr	r5, [r4, #0]
 8000d38:	f015 0506 	ands.w	r5, r5, #6
 8000d3c:	d106      	bne.n	8000d4c <_printf_common+0x48>
 8000d3e:	f104 0a19 	add.w	sl, r4, #25
 8000d42:	68e3      	ldr	r3, [r4, #12]
 8000d44:	6832      	ldr	r2, [r6, #0]
 8000d46:	1a9b      	subs	r3, r3, r2
 8000d48:	42ab      	cmp	r3, r5
 8000d4a:	dc26      	bgt.n	8000d9a <_printf_common+0x96>
 8000d4c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000d50:	6822      	ldr	r2, [r4, #0]
 8000d52:	3b00      	subs	r3, #0
 8000d54:	bf18      	it	ne
 8000d56:	2301      	movne	r3, #1
 8000d58:	0692      	lsls	r2, r2, #26
 8000d5a:	d42b      	bmi.n	8000db4 <_printf_common+0xb0>
 8000d5c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000d60:	4641      	mov	r1, r8
 8000d62:	4638      	mov	r0, r7
 8000d64:	47c8      	blx	r9
 8000d66:	3001      	adds	r0, #1
 8000d68:	d01e      	beq.n	8000da8 <_printf_common+0xa4>
 8000d6a:	6823      	ldr	r3, [r4, #0]
 8000d6c:	6922      	ldr	r2, [r4, #16]
 8000d6e:	f003 0306 	and.w	r3, r3, #6
 8000d72:	2b04      	cmp	r3, #4
 8000d74:	bf02      	ittt	eq
 8000d76:	68e5      	ldreq	r5, [r4, #12]
 8000d78:	6833      	ldreq	r3, [r6, #0]
 8000d7a:	1aed      	subeq	r5, r5, r3
 8000d7c:	68a3      	ldr	r3, [r4, #8]
 8000d7e:	bf0c      	ite	eq
 8000d80:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d84:	2500      	movne	r5, #0
 8000d86:	4293      	cmp	r3, r2
 8000d88:	bfc4      	itt	gt
 8000d8a:	1a9b      	subgt	r3, r3, r2
 8000d8c:	18ed      	addgt	r5, r5, r3
 8000d8e:	2600      	movs	r6, #0
 8000d90:	341a      	adds	r4, #26
 8000d92:	42b5      	cmp	r5, r6
 8000d94:	d11a      	bne.n	8000dcc <_printf_common+0xc8>
 8000d96:	2000      	movs	r0, #0
 8000d98:	e008      	b.n	8000dac <_printf_common+0xa8>
 8000d9a:	2301      	movs	r3, #1
 8000d9c:	4652      	mov	r2, sl
 8000d9e:	4641      	mov	r1, r8
 8000da0:	4638      	mov	r0, r7
 8000da2:	47c8      	blx	r9
 8000da4:	3001      	adds	r0, #1
 8000da6:	d103      	bne.n	8000db0 <_printf_common+0xac>
 8000da8:	f04f 30ff 	mov.w	r0, #4294967295
 8000dac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000db0:	3501      	adds	r5, #1
 8000db2:	e7c6      	b.n	8000d42 <_printf_common+0x3e>
 8000db4:	18e1      	adds	r1, r4, r3
 8000db6:	1c5a      	adds	r2, r3, #1
 8000db8:	2030      	movs	r0, #48	@ 0x30
 8000dba:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000dbe:	4422      	add	r2, r4
 8000dc0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000dc4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000dc8:	3302      	adds	r3, #2
 8000dca:	e7c7      	b.n	8000d5c <_printf_common+0x58>
 8000dcc:	2301      	movs	r3, #1
 8000dce:	4622      	mov	r2, r4
 8000dd0:	4641      	mov	r1, r8
 8000dd2:	4638      	mov	r0, r7
 8000dd4:	47c8      	blx	r9
 8000dd6:	3001      	adds	r0, #1
 8000dd8:	d0e6      	beq.n	8000da8 <_printf_common+0xa4>
 8000dda:	3601      	adds	r6, #1
 8000ddc:	e7d9      	b.n	8000d92 <_printf_common+0x8e>
	...

08000de0 <_printf_i>:
 8000de0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000de4:	7e0f      	ldrb	r7, [r1, #24]
 8000de6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000de8:	2f78      	cmp	r7, #120	@ 0x78
 8000dea:	4691      	mov	r9, r2
 8000dec:	4680      	mov	r8, r0
 8000dee:	460c      	mov	r4, r1
 8000df0:	469a      	mov	sl, r3
 8000df2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000df6:	d807      	bhi.n	8000e08 <_printf_i+0x28>
 8000df8:	2f62      	cmp	r7, #98	@ 0x62
 8000dfa:	d80a      	bhi.n	8000e12 <_printf_i+0x32>
 8000dfc:	2f00      	cmp	r7, #0
 8000dfe:	f000 80d1 	beq.w	8000fa4 <_printf_i+0x1c4>
 8000e02:	2f58      	cmp	r7, #88	@ 0x58
 8000e04:	f000 80b8 	beq.w	8000f78 <_printf_i+0x198>
 8000e08:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e0c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000e10:	e03a      	b.n	8000e88 <_printf_i+0xa8>
 8000e12:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000e16:	2b15      	cmp	r3, #21
 8000e18:	d8f6      	bhi.n	8000e08 <_printf_i+0x28>
 8000e1a:	a101      	add	r1, pc, #4	@ (adr r1, 8000e20 <_printf_i+0x40>)
 8000e1c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e20:	08000e79 	.word	0x08000e79
 8000e24:	08000e8d 	.word	0x08000e8d
 8000e28:	08000e09 	.word	0x08000e09
 8000e2c:	08000e09 	.word	0x08000e09
 8000e30:	08000e09 	.word	0x08000e09
 8000e34:	08000e09 	.word	0x08000e09
 8000e38:	08000e8d 	.word	0x08000e8d
 8000e3c:	08000e09 	.word	0x08000e09
 8000e40:	08000e09 	.word	0x08000e09
 8000e44:	08000e09 	.word	0x08000e09
 8000e48:	08000e09 	.word	0x08000e09
 8000e4c:	08000f8b 	.word	0x08000f8b
 8000e50:	08000eb7 	.word	0x08000eb7
 8000e54:	08000f45 	.word	0x08000f45
 8000e58:	08000e09 	.word	0x08000e09
 8000e5c:	08000e09 	.word	0x08000e09
 8000e60:	08000fad 	.word	0x08000fad
 8000e64:	08000e09 	.word	0x08000e09
 8000e68:	08000eb7 	.word	0x08000eb7
 8000e6c:	08000e09 	.word	0x08000e09
 8000e70:	08000e09 	.word	0x08000e09
 8000e74:	08000f4d 	.word	0x08000f4d
 8000e78:	6833      	ldr	r3, [r6, #0]
 8000e7a:	1d1a      	adds	r2, r3, #4
 8000e7c:	681b      	ldr	r3, [r3, #0]
 8000e7e:	6032      	str	r2, [r6, #0]
 8000e80:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e84:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000e88:	2301      	movs	r3, #1
 8000e8a:	e09c      	b.n	8000fc6 <_printf_i+0x1e6>
 8000e8c:	6833      	ldr	r3, [r6, #0]
 8000e8e:	6820      	ldr	r0, [r4, #0]
 8000e90:	1d19      	adds	r1, r3, #4
 8000e92:	6031      	str	r1, [r6, #0]
 8000e94:	0606      	lsls	r6, r0, #24
 8000e96:	d501      	bpl.n	8000e9c <_printf_i+0xbc>
 8000e98:	681d      	ldr	r5, [r3, #0]
 8000e9a:	e003      	b.n	8000ea4 <_printf_i+0xc4>
 8000e9c:	0645      	lsls	r5, r0, #25
 8000e9e:	d5fb      	bpl.n	8000e98 <_printf_i+0xb8>
 8000ea0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000ea4:	2d00      	cmp	r5, #0
 8000ea6:	da03      	bge.n	8000eb0 <_printf_i+0xd0>
 8000ea8:	232d      	movs	r3, #45	@ 0x2d
 8000eaa:	426d      	negs	r5, r5
 8000eac:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000eb0:	4858      	ldr	r0, [pc, #352]	@ (8001014 <_printf_i+0x234>)
 8000eb2:	230a      	movs	r3, #10
 8000eb4:	e011      	b.n	8000eda <_printf_i+0xfa>
 8000eb6:	6821      	ldr	r1, [r4, #0]
 8000eb8:	6833      	ldr	r3, [r6, #0]
 8000eba:	0608      	lsls	r0, r1, #24
 8000ebc:	f853 5b04 	ldr.w	r5, [r3], #4
 8000ec0:	d402      	bmi.n	8000ec8 <_printf_i+0xe8>
 8000ec2:	0649      	lsls	r1, r1, #25
 8000ec4:	bf48      	it	mi
 8000ec6:	b2ad      	uxthmi	r5, r5
 8000ec8:	2f6f      	cmp	r7, #111	@ 0x6f
 8000eca:	4852      	ldr	r0, [pc, #328]	@ (8001014 <_printf_i+0x234>)
 8000ecc:	6033      	str	r3, [r6, #0]
 8000ece:	bf14      	ite	ne
 8000ed0:	230a      	movne	r3, #10
 8000ed2:	2308      	moveq	r3, #8
 8000ed4:	2100      	movs	r1, #0
 8000ed6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000eda:	6866      	ldr	r6, [r4, #4]
 8000edc:	60a6      	str	r6, [r4, #8]
 8000ede:	2e00      	cmp	r6, #0
 8000ee0:	db05      	blt.n	8000eee <_printf_i+0x10e>
 8000ee2:	6821      	ldr	r1, [r4, #0]
 8000ee4:	432e      	orrs	r6, r5
 8000ee6:	f021 0104 	bic.w	r1, r1, #4
 8000eea:	6021      	str	r1, [r4, #0]
 8000eec:	d04b      	beq.n	8000f86 <_printf_i+0x1a6>
 8000eee:	4616      	mov	r6, r2
 8000ef0:	fbb5 f1f3 	udiv	r1, r5, r3
 8000ef4:	fb03 5711 	mls	r7, r3, r1, r5
 8000ef8:	5dc7      	ldrb	r7, [r0, r7]
 8000efa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000efe:	462f      	mov	r7, r5
 8000f00:	42bb      	cmp	r3, r7
 8000f02:	460d      	mov	r5, r1
 8000f04:	d9f4      	bls.n	8000ef0 <_printf_i+0x110>
 8000f06:	2b08      	cmp	r3, #8
 8000f08:	d10b      	bne.n	8000f22 <_printf_i+0x142>
 8000f0a:	6823      	ldr	r3, [r4, #0]
 8000f0c:	07df      	lsls	r7, r3, #31
 8000f0e:	d508      	bpl.n	8000f22 <_printf_i+0x142>
 8000f10:	6923      	ldr	r3, [r4, #16]
 8000f12:	6861      	ldr	r1, [r4, #4]
 8000f14:	4299      	cmp	r1, r3
 8000f16:	bfde      	ittt	le
 8000f18:	2330      	movle	r3, #48	@ 0x30
 8000f1a:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000f1e:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000f22:	1b92      	subs	r2, r2, r6
 8000f24:	6122      	str	r2, [r4, #16]
 8000f26:	f8cd a000 	str.w	sl, [sp]
 8000f2a:	464b      	mov	r3, r9
 8000f2c:	aa03      	add	r2, sp, #12
 8000f2e:	4621      	mov	r1, r4
 8000f30:	4640      	mov	r0, r8
 8000f32:	f7ff fee7 	bl	8000d04 <_printf_common>
 8000f36:	3001      	adds	r0, #1
 8000f38:	d14a      	bne.n	8000fd0 <_printf_i+0x1f0>
 8000f3a:	f04f 30ff 	mov.w	r0, #4294967295
 8000f3e:	b004      	add	sp, #16
 8000f40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f44:	6823      	ldr	r3, [r4, #0]
 8000f46:	f043 0320 	orr.w	r3, r3, #32
 8000f4a:	6023      	str	r3, [r4, #0]
 8000f4c:	4832      	ldr	r0, [pc, #200]	@ (8001018 <_printf_i+0x238>)
 8000f4e:	2778      	movs	r7, #120	@ 0x78
 8000f50:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000f54:	6823      	ldr	r3, [r4, #0]
 8000f56:	6831      	ldr	r1, [r6, #0]
 8000f58:	061f      	lsls	r7, r3, #24
 8000f5a:	f851 5b04 	ldr.w	r5, [r1], #4
 8000f5e:	d402      	bmi.n	8000f66 <_printf_i+0x186>
 8000f60:	065f      	lsls	r7, r3, #25
 8000f62:	bf48      	it	mi
 8000f64:	b2ad      	uxthmi	r5, r5
 8000f66:	6031      	str	r1, [r6, #0]
 8000f68:	07d9      	lsls	r1, r3, #31
 8000f6a:	bf44      	itt	mi
 8000f6c:	f043 0320 	orrmi.w	r3, r3, #32
 8000f70:	6023      	strmi	r3, [r4, #0]
 8000f72:	b11d      	cbz	r5, 8000f7c <_printf_i+0x19c>
 8000f74:	2310      	movs	r3, #16
 8000f76:	e7ad      	b.n	8000ed4 <_printf_i+0xf4>
 8000f78:	4826      	ldr	r0, [pc, #152]	@ (8001014 <_printf_i+0x234>)
 8000f7a:	e7e9      	b.n	8000f50 <_printf_i+0x170>
 8000f7c:	6823      	ldr	r3, [r4, #0]
 8000f7e:	f023 0320 	bic.w	r3, r3, #32
 8000f82:	6023      	str	r3, [r4, #0]
 8000f84:	e7f6      	b.n	8000f74 <_printf_i+0x194>
 8000f86:	4616      	mov	r6, r2
 8000f88:	e7bd      	b.n	8000f06 <_printf_i+0x126>
 8000f8a:	6833      	ldr	r3, [r6, #0]
 8000f8c:	6825      	ldr	r5, [r4, #0]
 8000f8e:	6961      	ldr	r1, [r4, #20]
 8000f90:	1d18      	adds	r0, r3, #4
 8000f92:	6030      	str	r0, [r6, #0]
 8000f94:	062e      	lsls	r6, r5, #24
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	d501      	bpl.n	8000f9e <_printf_i+0x1be>
 8000f9a:	6019      	str	r1, [r3, #0]
 8000f9c:	e002      	b.n	8000fa4 <_printf_i+0x1c4>
 8000f9e:	0668      	lsls	r0, r5, #25
 8000fa0:	d5fb      	bpl.n	8000f9a <_printf_i+0x1ba>
 8000fa2:	8019      	strh	r1, [r3, #0]
 8000fa4:	2300      	movs	r3, #0
 8000fa6:	6123      	str	r3, [r4, #16]
 8000fa8:	4616      	mov	r6, r2
 8000faa:	e7bc      	b.n	8000f26 <_printf_i+0x146>
 8000fac:	6833      	ldr	r3, [r6, #0]
 8000fae:	1d1a      	adds	r2, r3, #4
 8000fb0:	6032      	str	r2, [r6, #0]
 8000fb2:	681e      	ldr	r6, [r3, #0]
 8000fb4:	6862      	ldr	r2, [r4, #4]
 8000fb6:	2100      	movs	r1, #0
 8000fb8:	4630      	mov	r0, r6
 8000fba:	f7ff f911 	bl	80001e0 <memchr>
 8000fbe:	b108      	cbz	r0, 8000fc4 <_printf_i+0x1e4>
 8000fc0:	1b80      	subs	r0, r0, r6
 8000fc2:	6060      	str	r0, [r4, #4]
 8000fc4:	6863      	ldr	r3, [r4, #4]
 8000fc6:	6123      	str	r3, [r4, #16]
 8000fc8:	2300      	movs	r3, #0
 8000fca:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000fce:	e7aa      	b.n	8000f26 <_printf_i+0x146>
 8000fd0:	6923      	ldr	r3, [r4, #16]
 8000fd2:	4632      	mov	r2, r6
 8000fd4:	4649      	mov	r1, r9
 8000fd6:	4640      	mov	r0, r8
 8000fd8:	47d0      	blx	sl
 8000fda:	3001      	adds	r0, #1
 8000fdc:	d0ad      	beq.n	8000f3a <_printf_i+0x15a>
 8000fde:	6823      	ldr	r3, [r4, #0]
 8000fe0:	079b      	lsls	r3, r3, #30
 8000fe2:	d413      	bmi.n	800100c <_printf_i+0x22c>
 8000fe4:	68e0      	ldr	r0, [r4, #12]
 8000fe6:	9b03      	ldr	r3, [sp, #12]
 8000fe8:	4298      	cmp	r0, r3
 8000fea:	bfb8      	it	lt
 8000fec:	4618      	movlt	r0, r3
 8000fee:	e7a6      	b.n	8000f3e <_printf_i+0x15e>
 8000ff0:	2301      	movs	r3, #1
 8000ff2:	4632      	mov	r2, r6
 8000ff4:	4649      	mov	r1, r9
 8000ff6:	4640      	mov	r0, r8
 8000ff8:	47d0      	blx	sl
 8000ffa:	3001      	adds	r0, #1
 8000ffc:	d09d      	beq.n	8000f3a <_printf_i+0x15a>
 8000ffe:	3501      	adds	r5, #1
 8001000:	68e3      	ldr	r3, [r4, #12]
 8001002:	9903      	ldr	r1, [sp, #12]
 8001004:	1a5b      	subs	r3, r3, r1
 8001006:	42ab      	cmp	r3, r5
 8001008:	dcf2      	bgt.n	8000ff0 <_printf_i+0x210>
 800100a:	e7eb      	b.n	8000fe4 <_printf_i+0x204>
 800100c:	2500      	movs	r5, #0
 800100e:	f104 0619 	add.w	r6, r4, #25
 8001012:	e7f5      	b.n	8001000 <_printf_i+0x220>
 8001014:	0800140a 	.word	0x0800140a
 8001018:	0800141b 	.word	0x0800141b

0800101c <__sflush_r>:
 800101c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001024:	0716      	lsls	r6, r2, #28
 8001026:	4605      	mov	r5, r0
 8001028:	460c      	mov	r4, r1
 800102a:	d454      	bmi.n	80010d6 <__sflush_r+0xba>
 800102c:	684b      	ldr	r3, [r1, #4]
 800102e:	2b00      	cmp	r3, #0
 8001030:	dc02      	bgt.n	8001038 <__sflush_r+0x1c>
 8001032:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001034:	2b00      	cmp	r3, #0
 8001036:	dd48      	ble.n	80010ca <__sflush_r+0xae>
 8001038:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800103a:	2e00      	cmp	r6, #0
 800103c:	d045      	beq.n	80010ca <__sflush_r+0xae>
 800103e:	2300      	movs	r3, #0
 8001040:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001044:	682f      	ldr	r7, [r5, #0]
 8001046:	6a21      	ldr	r1, [r4, #32]
 8001048:	602b      	str	r3, [r5, #0]
 800104a:	d030      	beq.n	80010ae <__sflush_r+0x92>
 800104c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800104e:	89a3      	ldrh	r3, [r4, #12]
 8001050:	0759      	lsls	r1, r3, #29
 8001052:	d505      	bpl.n	8001060 <__sflush_r+0x44>
 8001054:	6863      	ldr	r3, [r4, #4]
 8001056:	1ad2      	subs	r2, r2, r3
 8001058:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800105a:	b10b      	cbz	r3, 8001060 <__sflush_r+0x44>
 800105c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800105e:	1ad2      	subs	r2, r2, r3
 8001060:	2300      	movs	r3, #0
 8001062:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001064:	6a21      	ldr	r1, [r4, #32]
 8001066:	4628      	mov	r0, r5
 8001068:	47b0      	blx	r6
 800106a:	1c43      	adds	r3, r0, #1
 800106c:	89a3      	ldrh	r3, [r4, #12]
 800106e:	d106      	bne.n	800107e <__sflush_r+0x62>
 8001070:	6829      	ldr	r1, [r5, #0]
 8001072:	291d      	cmp	r1, #29
 8001074:	d82b      	bhi.n	80010ce <__sflush_r+0xb2>
 8001076:	4a2a      	ldr	r2, [pc, #168]	@ (8001120 <__sflush_r+0x104>)
 8001078:	40ca      	lsrs	r2, r1
 800107a:	07d6      	lsls	r6, r2, #31
 800107c:	d527      	bpl.n	80010ce <__sflush_r+0xb2>
 800107e:	2200      	movs	r2, #0
 8001080:	6062      	str	r2, [r4, #4]
 8001082:	04d9      	lsls	r1, r3, #19
 8001084:	6922      	ldr	r2, [r4, #16]
 8001086:	6022      	str	r2, [r4, #0]
 8001088:	d504      	bpl.n	8001094 <__sflush_r+0x78>
 800108a:	1c42      	adds	r2, r0, #1
 800108c:	d101      	bne.n	8001092 <__sflush_r+0x76>
 800108e:	682b      	ldr	r3, [r5, #0]
 8001090:	b903      	cbnz	r3, 8001094 <__sflush_r+0x78>
 8001092:	6560      	str	r0, [r4, #84]	@ 0x54
 8001094:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001096:	602f      	str	r7, [r5, #0]
 8001098:	b1b9      	cbz	r1, 80010ca <__sflush_r+0xae>
 800109a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800109e:	4299      	cmp	r1, r3
 80010a0:	d002      	beq.n	80010a8 <__sflush_r+0x8c>
 80010a2:	4628      	mov	r0, r5
 80010a4:	f7ff fbf4 	bl	8000890 <_free_r>
 80010a8:	2300      	movs	r3, #0
 80010aa:	6363      	str	r3, [r4, #52]	@ 0x34
 80010ac:	e00d      	b.n	80010ca <__sflush_r+0xae>
 80010ae:	2301      	movs	r3, #1
 80010b0:	4628      	mov	r0, r5
 80010b2:	47b0      	blx	r6
 80010b4:	4602      	mov	r2, r0
 80010b6:	1c50      	adds	r0, r2, #1
 80010b8:	d1c9      	bne.n	800104e <__sflush_r+0x32>
 80010ba:	682b      	ldr	r3, [r5, #0]
 80010bc:	2b00      	cmp	r3, #0
 80010be:	d0c6      	beq.n	800104e <__sflush_r+0x32>
 80010c0:	2b1d      	cmp	r3, #29
 80010c2:	d001      	beq.n	80010c8 <__sflush_r+0xac>
 80010c4:	2b16      	cmp	r3, #22
 80010c6:	d11e      	bne.n	8001106 <__sflush_r+0xea>
 80010c8:	602f      	str	r7, [r5, #0]
 80010ca:	2000      	movs	r0, #0
 80010cc:	e022      	b.n	8001114 <__sflush_r+0xf8>
 80010ce:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010d2:	b21b      	sxth	r3, r3
 80010d4:	e01b      	b.n	800110e <__sflush_r+0xf2>
 80010d6:	690f      	ldr	r7, [r1, #16]
 80010d8:	2f00      	cmp	r7, #0
 80010da:	d0f6      	beq.n	80010ca <__sflush_r+0xae>
 80010dc:	0793      	lsls	r3, r2, #30
 80010de:	680e      	ldr	r6, [r1, #0]
 80010e0:	bf08      	it	eq
 80010e2:	694b      	ldreq	r3, [r1, #20]
 80010e4:	600f      	str	r7, [r1, #0]
 80010e6:	bf18      	it	ne
 80010e8:	2300      	movne	r3, #0
 80010ea:	eba6 0807 	sub.w	r8, r6, r7
 80010ee:	608b      	str	r3, [r1, #8]
 80010f0:	f1b8 0f00 	cmp.w	r8, #0
 80010f4:	dde9      	ble.n	80010ca <__sflush_r+0xae>
 80010f6:	6a21      	ldr	r1, [r4, #32]
 80010f8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80010fa:	4643      	mov	r3, r8
 80010fc:	463a      	mov	r2, r7
 80010fe:	4628      	mov	r0, r5
 8001100:	47b0      	blx	r6
 8001102:	2800      	cmp	r0, #0
 8001104:	dc08      	bgt.n	8001118 <__sflush_r+0xfc>
 8001106:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800110a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800110e:	81a3      	strh	r3, [r4, #12]
 8001110:	f04f 30ff 	mov.w	r0, #4294967295
 8001114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001118:	4407      	add	r7, r0
 800111a:	eba8 0800 	sub.w	r8, r8, r0
 800111e:	e7e7      	b.n	80010f0 <__sflush_r+0xd4>
 8001120:	20400001 	.word	0x20400001

08001124 <_fflush_r>:
 8001124:	b538      	push	{r3, r4, r5, lr}
 8001126:	690b      	ldr	r3, [r1, #16]
 8001128:	4605      	mov	r5, r0
 800112a:	460c      	mov	r4, r1
 800112c:	b913      	cbnz	r3, 8001134 <_fflush_r+0x10>
 800112e:	2500      	movs	r5, #0
 8001130:	4628      	mov	r0, r5
 8001132:	bd38      	pop	{r3, r4, r5, pc}
 8001134:	b118      	cbz	r0, 800113e <_fflush_r+0x1a>
 8001136:	6a03      	ldr	r3, [r0, #32]
 8001138:	b90b      	cbnz	r3, 800113e <_fflush_r+0x1a>
 800113a:	f7ff faa1 	bl	8000680 <__sinit>
 800113e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001142:	2b00      	cmp	r3, #0
 8001144:	d0f3      	beq.n	800112e <_fflush_r+0xa>
 8001146:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001148:	07d0      	lsls	r0, r2, #31
 800114a:	d404      	bmi.n	8001156 <_fflush_r+0x32>
 800114c:	0599      	lsls	r1, r3, #22
 800114e:	d402      	bmi.n	8001156 <_fflush_r+0x32>
 8001150:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001152:	f7ff fb9a 	bl	800088a <__retarget_lock_acquire_recursive>
 8001156:	4628      	mov	r0, r5
 8001158:	4621      	mov	r1, r4
 800115a:	f7ff ff5f 	bl	800101c <__sflush_r>
 800115e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001160:	07da      	lsls	r2, r3, #31
 8001162:	4605      	mov	r5, r0
 8001164:	d4e4      	bmi.n	8001130 <_fflush_r+0xc>
 8001166:	89a3      	ldrh	r3, [r4, #12]
 8001168:	059b      	lsls	r3, r3, #22
 800116a:	d4e1      	bmi.n	8001130 <_fflush_r+0xc>
 800116c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800116e:	f7ff fb8d 	bl	800088c <__retarget_lock_release_recursive>
 8001172:	e7dd      	b.n	8001130 <_fflush_r+0xc>

08001174 <__swbuf_r>:
 8001174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001176:	460e      	mov	r6, r1
 8001178:	4614      	mov	r4, r2
 800117a:	4605      	mov	r5, r0
 800117c:	b118      	cbz	r0, 8001186 <__swbuf_r+0x12>
 800117e:	6a03      	ldr	r3, [r0, #32]
 8001180:	b90b      	cbnz	r3, 8001186 <__swbuf_r+0x12>
 8001182:	f7ff fa7d 	bl	8000680 <__sinit>
 8001186:	69a3      	ldr	r3, [r4, #24]
 8001188:	60a3      	str	r3, [r4, #8]
 800118a:	89a3      	ldrh	r3, [r4, #12]
 800118c:	071a      	lsls	r2, r3, #28
 800118e:	d501      	bpl.n	8001194 <__swbuf_r+0x20>
 8001190:	6923      	ldr	r3, [r4, #16]
 8001192:	b943      	cbnz	r3, 80011a6 <__swbuf_r+0x32>
 8001194:	4621      	mov	r1, r4
 8001196:	4628      	mov	r0, r5
 8001198:	f000 f82a 	bl	80011f0 <__swsetup_r>
 800119c:	b118      	cbz	r0, 80011a6 <__swbuf_r+0x32>
 800119e:	f04f 37ff 	mov.w	r7, #4294967295
 80011a2:	4638      	mov	r0, r7
 80011a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011a6:	6823      	ldr	r3, [r4, #0]
 80011a8:	6922      	ldr	r2, [r4, #16]
 80011aa:	1a98      	subs	r0, r3, r2
 80011ac:	6963      	ldr	r3, [r4, #20]
 80011ae:	b2f6      	uxtb	r6, r6
 80011b0:	4283      	cmp	r3, r0
 80011b2:	4637      	mov	r7, r6
 80011b4:	dc05      	bgt.n	80011c2 <__swbuf_r+0x4e>
 80011b6:	4621      	mov	r1, r4
 80011b8:	4628      	mov	r0, r5
 80011ba:	f7ff ffb3 	bl	8001124 <_fflush_r>
 80011be:	2800      	cmp	r0, #0
 80011c0:	d1ed      	bne.n	800119e <__swbuf_r+0x2a>
 80011c2:	68a3      	ldr	r3, [r4, #8]
 80011c4:	3b01      	subs	r3, #1
 80011c6:	60a3      	str	r3, [r4, #8]
 80011c8:	6823      	ldr	r3, [r4, #0]
 80011ca:	1c5a      	adds	r2, r3, #1
 80011cc:	6022      	str	r2, [r4, #0]
 80011ce:	701e      	strb	r6, [r3, #0]
 80011d0:	6962      	ldr	r2, [r4, #20]
 80011d2:	1c43      	adds	r3, r0, #1
 80011d4:	429a      	cmp	r2, r3
 80011d6:	d004      	beq.n	80011e2 <__swbuf_r+0x6e>
 80011d8:	89a3      	ldrh	r3, [r4, #12]
 80011da:	07db      	lsls	r3, r3, #31
 80011dc:	d5e1      	bpl.n	80011a2 <__swbuf_r+0x2e>
 80011de:	2e0a      	cmp	r6, #10
 80011e0:	d1df      	bne.n	80011a2 <__swbuf_r+0x2e>
 80011e2:	4621      	mov	r1, r4
 80011e4:	4628      	mov	r0, r5
 80011e6:	f7ff ff9d 	bl	8001124 <_fflush_r>
 80011ea:	2800      	cmp	r0, #0
 80011ec:	d0d9      	beq.n	80011a2 <__swbuf_r+0x2e>
 80011ee:	e7d6      	b.n	800119e <__swbuf_r+0x2a>

080011f0 <__swsetup_r>:
 80011f0:	b538      	push	{r3, r4, r5, lr}
 80011f2:	4b29      	ldr	r3, [pc, #164]	@ (8001298 <__swsetup_r+0xa8>)
 80011f4:	4605      	mov	r5, r0
 80011f6:	6818      	ldr	r0, [r3, #0]
 80011f8:	460c      	mov	r4, r1
 80011fa:	b118      	cbz	r0, 8001204 <__swsetup_r+0x14>
 80011fc:	6a03      	ldr	r3, [r0, #32]
 80011fe:	b90b      	cbnz	r3, 8001204 <__swsetup_r+0x14>
 8001200:	f7ff fa3e 	bl	8000680 <__sinit>
 8001204:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001208:	0719      	lsls	r1, r3, #28
 800120a:	d422      	bmi.n	8001252 <__swsetup_r+0x62>
 800120c:	06da      	lsls	r2, r3, #27
 800120e:	d407      	bmi.n	8001220 <__swsetup_r+0x30>
 8001210:	2209      	movs	r2, #9
 8001212:	602a      	str	r2, [r5, #0]
 8001214:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001218:	81a3      	strh	r3, [r4, #12]
 800121a:	f04f 30ff 	mov.w	r0, #4294967295
 800121e:	e033      	b.n	8001288 <__swsetup_r+0x98>
 8001220:	0758      	lsls	r0, r3, #29
 8001222:	d512      	bpl.n	800124a <__swsetup_r+0x5a>
 8001224:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001226:	b141      	cbz	r1, 800123a <__swsetup_r+0x4a>
 8001228:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800122c:	4299      	cmp	r1, r3
 800122e:	d002      	beq.n	8001236 <__swsetup_r+0x46>
 8001230:	4628      	mov	r0, r5
 8001232:	f7ff fb2d 	bl	8000890 <_free_r>
 8001236:	2300      	movs	r3, #0
 8001238:	6363      	str	r3, [r4, #52]	@ 0x34
 800123a:	89a3      	ldrh	r3, [r4, #12]
 800123c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001240:	81a3      	strh	r3, [r4, #12]
 8001242:	2300      	movs	r3, #0
 8001244:	6063      	str	r3, [r4, #4]
 8001246:	6923      	ldr	r3, [r4, #16]
 8001248:	6023      	str	r3, [r4, #0]
 800124a:	89a3      	ldrh	r3, [r4, #12]
 800124c:	f043 0308 	orr.w	r3, r3, #8
 8001250:	81a3      	strh	r3, [r4, #12]
 8001252:	6923      	ldr	r3, [r4, #16]
 8001254:	b94b      	cbnz	r3, 800126a <__swsetup_r+0x7a>
 8001256:	89a3      	ldrh	r3, [r4, #12]
 8001258:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800125c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001260:	d003      	beq.n	800126a <__swsetup_r+0x7a>
 8001262:	4621      	mov	r1, r4
 8001264:	4628      	mov	r0, r5
 8001266:	f000 f84f 	bl	8001308 <__smakebuf_r>
 800126a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800126e:	f013 0201 	ands.w	r2, r3, #1
 8001272:	d00a      	beq.n	800128a <__swsetup_r+0x9a>
 8001274:	2200      	movs	r2, #0
 8001276:	60a2      	str	r2, [r4, #8]
 8001278:	6962      	ldr	r2, [r4, #20]
 800127a:	4252      	negs	r2, r2
 800127c:	61a2      	str	r2, [r4, #24]
 800127e:	6922      	ldr	r2, [r4, #16]
 8001280:	b942      	cbnz	r2, 8001294 <__swsetup_r+0xa4>
 8001282:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001286:	d1c5      	bne.n	8001214 <__swsetup_r+0x24>
 8001288:	bd38      	pop	{r3, r4, r5, pc}
 800128a:	0799      	lsls	r1, r3, #30
 800128c:	bf58      	it	pl
 800128e:	6962      	ldrpl	r2, [r4, #20]
 8001290:	60a2      	str	r2, [r4, #8]
 8001292:	e7f4      	b.n	800127e <__swsetup_r+0x8e>
 8001294:	2000      	movs	r0, #0
 8001296:	e7f7      	b.n	8001288 <__swsetup_r+0x98>
 8001298:	2000000c 	.word	0x2000000c

0800129c <_sbrk_r>:
 800129c:	b538      	push	{r3, r4, r5, lr}
 800129e:	4d06      	ldr	r5, [pc, #24]	@ (80012b8 <_sbrk_r+0x1c>)
 80012a0:	2300      	movs	r3, #0
 80012a2:	4604      	mov	r4, r0
 80012a4:	4608      	mov	r0, r1
 80012a6:	602b      	str	r3, [r5, #0]
 80012a8:	f7ff f862 	bl	8000370 <_sbrk>
 80012ac:	1c43      	adds	r3, r0, #1
 80012ae:	d102      	bne.n	80012b6 <_sbrk_r+0x1a>
 80012b0:	682b      	ldr	r3, [r5, #0]
 80012b2:	b103      	cbz	r3, 80012b6 <_sbrk_r+0x1a>
 80012b4:	6023      	str	r3, [r4, #0]
 80012b6:	bd38      	pop	{r3, r4, r5, pc}
 80012b8:	200001b8 	.word	0x200001b8

080012bc <__swhatbuf_r>:
 80012bc:	b570      	push	{r4, r5, r6, lr}
 80012be:	460c      	mov	r4, r1
 80012c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012c4:	2900      	cmp	r1, #0
 80012c6:	b096      	sub	sp, #88	@ 0x58
 80012c8:	4615      	mov	r5, r2
 80012ca:	461e      	mov	r6, r3
 80012cc:	da0d      	bge.n	80012ea <__swhatbuf_r+0x2e>
 80012ce:	89a3      	ldrh	r3, [r4, #12]
 80012d0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80012d4:	f04f 0100 	mov.w	r1, #0
 80012d8:	bf14      	ite	ne
 80012da:	2340      	movne	r3, #64	@ 0x40
 80012dc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80012e0:	2000      	movs	r0, #0
 80012e2:	6031      	str	r1, [r6, #0]
 80012e4:	602b      	str	r3, [r5, #0]
 80012e6:	b016      	add	sp, #88	@ 0x58
 80012e8:	bd70      	pop	{r4, r5, r6, pc}
 80012ea:	466a      	mov	r2, sp
 80012ec:	f000 f848 	bl	8001380 <_fstat_r>
 80012f0:	2800      	cmp	r0, #0
 80012f2:	dbec      	blt.n	80012ce <__swhatbuf_r+0x12>
 80012f4:	9901      	ldr	r1, [sp, #4]
 80012f6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80012fa:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80012fe:	4259      	negs	r1, r3
 8001300:	4159      	adcs	r1, r3
 8001302:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001306:	e7eb      	b.n	80012e0 <__swhatbuf_r+0x24>

08001308 <__smakebuf_r>:
 8001308:	898b      	ldrh	r3, [r1, #12]
 800130a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800130c:	079d      	lsls	r5, r3, #30
 800130e:	4606      	mov	r6, r0
 8001310:	460c      	mov	r4, r1
 8001312:	d507      	bpl.n	8001324 <__smakebuf_r+0x1c>
 8001314:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001318:	6023      	str	r3, [r4, #0]
 800131a:	6123      	str	r3, [r4, #16]
 800131c:	2301      	movs	r3, #1
 800131e:	6163      	str	r3, [r4, #20]
 8001320:	b003      	add	sp, #12
 8001322:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001324:	ab01      	add	r3, sp, #4
 8001326:	466a      	mov	r2, sp
 8001328:	f7ff ffc8 	bl	80012bc <__swhatbuf_r>
 800132c:	9f00      	ldr	r7, [sp, #0]
 800132e:	4605      	mov	r5, r0
 8001330:	4639      	mov	r1, r7
 8001332:	4630      	mov	r0, r6
 8001334:	f7ff fb18 	bl	8000968 <_malloc_r>
 8001338:	b948      	cbnz	r0, 800134e <__smakebuf_r+0x46>
 800133a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800133e:	059a      	lsls	r2, r3, #22
 8001340:	d4ee      	bmi.n	8001320 <__smakebuf_r+0x18>
 8001342:	f023 0303 	bic.w	r3, r3, #3
 8001346:	f043 0302 	orr.w	r3, r3, #2
 800134a:	81a3      	strh	r3, [r4, #12]
 800134c:	e7e2      	b.n	8001314 <__smakebuf_r+0xc>
 800134e:	89a3      	ldrh	r3, [r4, #12]
 8001350:	6020      	str	r0, [r4, #0]
 8001352:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001356:	81a3      	strh	r3, [r4, #12]
 8001358:	9b01      	ldr	r3, [sp, #4]
 800135a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800135e:	b15b      	cbz	r3, 8001378 <__smakebuf_r+0x70>
 8001360:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001364:	4630      	mov	r0, r6
 8001366:	f000 f81d 	bl	80013a4 <_isatty_r>
 800136a:	b128      	cbz	r0, 8001378 <__smakebuf_r+0x70>
 800136c:	89a3      	ldrh	r3, [r4, #12]
 800136e:	f023 0303 	bic.w	r3, r3, #3
 8001372:	f043 0301 	orr.w	r3, r3, #1
 8001376:	81a3      	strh	r3, [r4, #12]
 8001378:	89a3      	ldrh	r3, [r4, #12]
 800137a:	431d      	orrs	r5, r3
 800137c:	81a5      	strh	r5, [r4, #12]
 800137e:	e7cf      	b.n	8001320 <__smakebuf_r+0x18>

08001380 <_fstat_r>:
 8001380:	b538      	push	{r3, r4, r5, lr}
 8001382:	4d07      	ldr	r5, [pc, #28]	@ (80013a0 <_fstat_r+0x20>)
 8001384:	2300      	movs	r3, #0
 8001386:	4604      	mov	r4, r0
 8001388:	4608      	mov	r0, r1
 800138a:	4611      	mov	r1, r2
 800138c:	602b      	str	r3, [r5, #0]
 800138e:	f7fe ffc6 	bl	800031e <_fstat>
 8001392:	1c43      	adds	r3, r0, #1
 8001394:	d102      	bne.n	800139c <_fstat_r+0x1c>
 8001396:	682b      	ldr	r3, [r5, #0]
 8001398:	b103      	cbz	r3, 800139c <_fstat_r+0x1c>
 800139a:	6023      	str	r3, [r4, #0]
 800139c:	bd38      	pop	{r3, r4, r5, pc}
 800139e:	bf00      	nop
 80013a0:	200001b8 	.word	0x200001b8

080013a4 <_isatty_r>:
 80013a4:	b538      	push	{r3, r4, r5, lr}
 80013a6:	4d06      	ldr	r5, [pc, #24]	@ (80013c0 <_isatty_r+0x1c>)
 80013a8:	2300      	movs	r3, #0
 80013aa:	4604      	mov	r4, r0
 80013ac:	4608      	mov	r0, r1
 80013ae:	602b      	str	r3, [r5, #0]
 80013b0:	f7fe ffc5 	bl	800033e <_isatty>
 80013b4:	1c43      	adds	r3, r0, #1
 80013b6:	d102      	bne.n	80013be <_isatty_r+0x1a>
 80013b8:	682b      	ldr	r3, [r5, #0]
 80013ba:	b103      	cbz	r3, 80013be <_isatty_r+0x1a>
 80013bc:	6023      	str	r3, [r4, #0]
 80013be:	bd38      	pop	{r3, r4, r5, pc}
 80013c0:	200001b8 	.word	0x200001b8

080013c4 <_init>:
 80013c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013c6:	bf00      	nop
 80013c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013ca:	bc08      	pop	{r3}
 80013cc:	469e      	mov	lr, r3
 80013ce:	4770      	bx	lr

080013d0 <_fini>:
 80013d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013d2:	bf00      	nop
 80013d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d6:	bc08      	pop	{r3}
 80013d8:	469e      	mov	lr, r3
 80013da:	4770      	bx	lr
